{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nimport * as i2 from \"@angular/common\";\nfunction DopplerRangeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 9)(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function DopplerRangeComponent_div_4_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.startAnimation());\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function DopplerRangeComponent_div_4_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.stopAnimation());\n    });\n    i0.ɵɵtext(12, \"Stop\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function DopplerRangeComponent_div_4_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.previousFrame());\n    });\n    i0.ɵɵtext(14, \"\\u25C0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function DopplerRangeComponent_div_4_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.nextFrame());\n    });\n    i0.ɵɵtext(16, \"\\u25B6\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 14)(18, \"input\", 15);\n    i0.ɵɵlistener(\"input\", function DopplerRangeComponent_div_4_Template_input_input_18_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.goToFrame(+$event.target.value));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 16)(20, \"label\");\n    i0.ɵɵtext(21, \"Speed (ms): \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function DopplerRangeComponent_div_4_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.animationSpeed = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Frame: \", ctx_r0.currentFrameIndex + 1, \" / \", ctx_r0.totalFrames, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Min: \", ctx_r0.minValue.toFixed(2), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Max: \", ctx_r0.maxValue.toFixed(2), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isAnimating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.isAnimating ? \"Playing...\" : \"Play\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isAnimating);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isAnimating || ctx_r0.currentFrameIndex === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isAnimating || ctx_r0.currentFrameIndex === ctx_r0.totalFrames - 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"min\", 0)(\"max\", ctx_r0.totalFrames - 1)(\"value\", ctx_r0.currentFrameIndex)(\"disabled\", ctx_r0.isAnimating);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.animationSpeed)(\"min\", 50)(\"max\", 1000)(\"step\", 50)(\"disabled\", ctx_r0.isAnimating);\n  }\n}\nfunction DopplerRangeComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 24);\n  }\n  if (rf & 2) {\n    const cell_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", cell_r12.color)(\"grid-row\", cell_r12.row + 1)(\"grid-column\", cell_r12.col + 1);\n    i0.ɵɵproperty(\"title\", \"Frame: \" + (ctx_r11.currentFrameIndex + 1) + \", Row: \" + cell_r12.row + \", Col: \" + cell_r12.col + \", Value: \" + cell_r12.value.toFixed(4));\n  }\n}\nfunction DopplerRangeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵtemplate(2, DopplerRangeComponent_div_6_div_2_Template, 1, 7, \"div\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 21);\n    i0.ɵɵelement(4, \"div\", 22);\n    i0.ɵɵelementStart(5, \"div\", 23)(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"grid-template-rows\", \"repeat(\" + ctx_r1.rows + \", 1fr)\")(\"grid-template-columns\", \"repeat(\" + ctx_r1.cols + \", 1fr)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.heatmapCells);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.minValue.toFixed(2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(((ctx_r1.minValue + ctx_r1.maxValue) / 2).toFixed(2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.maxValue.toFixed(2));\n  }\n}\nfunction DopplerRangeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \" Loading data... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DopplerRangeComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Data received but no heatmap cells generated! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DopplerRangeComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.dopplerData = null;\n    this.currentFrame = [];\n    this.heatmapCells = [];\n    this.maxValue = 0;\n    this.minValue = 0;\n    // Animation properties (come LivePlot_class.py)\n    this.currentFrameIndex = 0;\n    this.totalFrames = 0;\n    this.isAnimating = false;\n    this.animationInterval = null;\n    this.animationSpeed = 100; // 100ms come nel LivePlot_class.py\n    // Grid dimensions\n    this.rows = 0;\n    this.cols = 0;\n  }\n  ngOnInit() {\n    this.fetchDopplerData();\n  }\n  ngOnDestroy() {\n    this.stopAnimation();\n  }\n  fetchDopplerData() {\n    console.log('Fetching Range-Doppler Map data...');\n    this.dataService.getDoppler().subscribe({\n      next: data => {\n        console.log('Range-Doppler Map data received:', data);\n        this.dopplerData = data;\n        this.initializeData();\n      },\n      error: error => {\n        console.error('Error fetching Range-Doppler data:', error);\n      }\n    });\n  }\n  initializeData() {\n    if (!this.dopplerData || !this.dopplerData['Range-Doppler Map']) {\n      console.error('Invalid Range-Doppler Map data');\n      return;\n    }\n    const rangeData = this.dopplerData['Range-Doppler Map'];\n    this.totalFrames = rangeData.length;\n    if (this.totalFrames > 0) {\n      this.rows = rangeData[0].length;\n      this.cols = rangeData[0][0].length;\n      // Calcola min/max su tutti i frame\n      this.calculateGlobalMinMax();\n      // Mostra il primo frame\n      this.currentFrameIndex = 0;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  calculateGlobalMinMax() {\n    const allValues = [];\n    this.dopplerData['Range-Doppler Map'].forEach(frame => {\n      frame.forEach(row => {\n        allValues.push(...row);\n      });\n    });\n    this.maxValue = Math.max(...allValues);\n    this.minValue = Math.min(...allValues);\n  }\n  showFrame(frameIndex) {\n    if (!this.dopplerData || frameIndex >= this.totalFrames) return;\n    this.currentFrame = this.dopplerData['Range-Doppler Map'][frameIndex];\n    this.generateHeatmapCells();\n  }\n  // Metodi di controllo animazione (come LivePlot_class.py)\n  startAnimation() {\n    if (this.isAnimating) return;\n    this.isAnimating = true;\n    this.currentFrameIndex = 0;\n    this.animationInterval = setInterval(() => {\n      this.updateFrame();\n    }, this.animationSpeed);\n  }\n  stopAnimation() {\n    this.isAnimating = false;\n    if (this.animationInterval) {\n      clearInterval(this.animationInterval);\n      this.animationInterval = null;\n    }\n  }\n  updateFrame() {\n    if (this.currentFrameIndex < this.totalFrames) {\n      this.showFrame(this.currentFrameIndex);\n      console.log(`Frame: ${this.currentFrameIndex}`);\n      this.currentFrameIndex++;\n    } else {\n      this.stopAnimation(); // Si ferma quando raggiunge l'ultimo frame\n    }\n  }\n  // Controlli manuali\n  nextFrame() {\n    if (this.currentFrameIndex < this.totalFrames - 1) {\n      this.currentFrameIndex++;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  previousFrame() {\n    if (this.currentFrameIndex > 0) {\n      this.currentFrameIndex--;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  goToFrame(frameIndex) {\n    if (frameIndex >= 0 && frameIndex < this.totalFrames) {\n      this.currentFrameIndex = frameIndex;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  generateHeatmapCells() {\n    if (!this.currentFrame || this.currentFrame.length === 0) {\n      console.error('Invalid current frame data');\n      return;\n    }\n    this.heatmapCells = [];\n    this.currentFrame.forEach((row, rowIndex) => {\n      row.forEach((value, colIndex) => {\n        // Normalizza il valore tra 0 e 1 usando i valori globali min/max\n        const normalizedValue = this.maxValue !== this.minValue ? (value - this.minValue) / (this.maxValue - this.minValue) : 0;\n        // Genera colore basato sul valore (viridis-like colormap come pyqtgraph)\n        const color = this.getViridisColor(normalizedValue);\n        this.heatmapCells.push({\n          row: rowIndex,\n          col: colIndex,\n          value: value,\n          color: color\n        });\n      });\n    });\n    console.log(`Frame ${this.currentFrameIndex}: ${this.heatmapCells.length} cells generated`);\n  }\n  getViridisColor(normalizedValue) {\n    // Replica il colormap viridis di pyqtgraph\n    // Transizione: Viola scuro -> Blu -> Verde -> Giallo\n    if (normalizedValue <= 0.25) {\n      // Viola scuro a Blu\n      const t = normalizedValue / 0.25;\n      const r = Math.round(68 + (59 - 68) * t);\n      const g = Math.round(1 + (82 - 1) * t);\n      const b = Math.round(84 + (139 - 84) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    } else if (normalizedValue <= 0.5) {\n      // Blu a Verde scuro\n      const t = (normalizedValue - 0.25) / 0.25;\n      const r = Math.round(59 + (33 - 59) * t);\n      const g = Math.round(82 + (144 - 82) * t);\n      const b = Math.round(139 + (140 - 139) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    } else if (normalizedValue <= 0.75) {\n      // Verde scuro a Verde chiaro\n      const t = (normalizedValue - 0.5) / 0.25;\n      const r = Math.round(33 + (94 - 33) * t);\n      const g = Math.round(144 + (201 - 144) * t);\n      const b = Math.round(140 + (98 - 140) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    } else {\n      // Verde chiaro a Giallo\n      const t = (normalizedValue - 0.75) / 0.25;\n      const r = Math.round(94 + (253 - 94) * t);\n      const g = Math.round(201 + (231 - 201) * t);\n      const b = Math.round(98 + (37 - 98) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    }\n  }\n  static {\n    this.ɵfac = function DopplerRangeComponent_Factory(t) {\n      return new (t || DopplerRangeComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DopplerRangeComponent,\n      selectors: [[\"app-doppler-range\"]],\n      decls: 9,\n      vars: 4,\n      consts: [[1, \"doppler-range-container\"], [1, \"doppler-header\"], [\"class\", \"animation-controls\", 4, \"ngIf\"], [1, \"doppler-visualization\"], [\"class\", \"heatmap-container\", 4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [1, \"animation-controls\"], [1, \"frame-info\"], [1, \"control-buttons\"], [1, \"btn-play\", 3, \"disabled\", \"click\"], [1, \"btn-stop\", 3, \"disabled\", \"click\"], [1, \"btn-prev\", 3, \"disabled\", \"click\"], [1, \"btn-next\", 3, \"disabled\", \"click\"], [1, \"frame-slider\"], [\"type\", \"range\", 1, \"frame-range\", 3, \"min\", \"max\", \"value\", \"disabled\", \"input\"], [1, \"speed-control\"], [\"type\", \"number\", 3, \"ngModel\", \"min\", \"max\", \"step\", \"disabled\", \"ngModelChange\"], [1, \"heatmap-container\"], [1, \"heatmap-grid\"], [\"class\", \"heatmap-cell\", 3, \"background-color\", \"grid-row\", \"grid-column\", \"title\", 4, \"ngFor\", \"ngForOf\"], [1, \"color-bar\"], [1, \"color-gradient\"], [1, \"color-labels\"], [1, \"heatmap-cell\", 3, \"title\"], [1, \"loading\"], [2, \"color\", \"red\"]],\n      template: function DopplerRangeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n          i0.ɵɵtext(3, \"Range-Doppler Map (Live Plot)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, DopplerRangeComponent_div_4_Template, 23, 18, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3);\n          i0.ɵɵtemplate(6, DopplerRangeComponent_div_6_Template, 12, 8, \"div\", 4);\n          i0.ɵɵtemplate(7, DopplerRangeComponent_div_7_Template, 2, 0, \"div\", 5);\n          i0.ɵɵtemplate(8, DopplerRangeComponent_div_8_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData && ctx.heatmapCells.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.dopplerData);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData && ctx.heatmapCells.length === 0);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\".doppler-range-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 500px;\\n  padding: 20px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n}\\n\\n.doppler-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 16px;\\n}\\n\\n.doppler-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #0a2540;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.heatmap-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 16px;\\n  font-size: 12px;\\n  color: #666;\\n}\\n\\n.heatmap-info[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  background-color: #f0f8ff;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  border: 1px solid #00d4ff;\\n}\\n\\n.doppler-visualization[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.heatmap-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 20px;\\n  flex: 1;\\n}\\n\\n.heatmap-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(5, 1fr);\\n  grid-template-rows: repeat(5, 1fr);\\n  gap: 3px;\\n  flex: 1;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 8px;\\n  background-color: #f9f9f9;\\n  max-width: 450px;\\n}\\n\\n.heatmap-cell[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  transition: transform 0.2s;\\n  min-height: 80px;\\n  min-width: 80px;\\n}\\n\\n.heatmap-cell[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.05);\\n  border: 2px solid #333;\\n}\\n\\n.cell-value[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  font-weight: 600;\\n  color: #333;\\n  text-shadow: 1px 1px 1px rgba(255,255,255,0.5);\\n}\\n\\n.color-legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 80px;\\n  height: 100%;\\n}\\n\\n.legend-title[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 600;\\n  margin-bottom: 10px;\\n  color: #333;\\n  text-align: center;\\n}\\n\\n.legend-bar[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: stretch;\\n  flex: 1;\\n}\\n\\n.legend-gradient[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 100%;\\n  background: linear-gradient(to top, \\n    rgb(0, 0, 255) 0%, \\n    rgb(0, 255, 255) 33%, \\n    rgb(255, 255, 0) 66%, \\n    rgb(255, 0, 0) 100%);\\n  border: 1px solid #ccc;\\n  border-radius: 3px;\\n}\\n\\n.legend-labels[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  height: 100%;\\n  margin-left: 8px;\\n  font-size: 10px;\\n  color: #666;\\n}\\n\\n.loading[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  color: #666;\\n  font-style: italic;\\n}\\n\\n.doppler-bar[_ngcontent-%COMP%] {\\n  width: 15%;\\n  background: linear-gradient(to top, var(--primary-color), var(--accent-color));\\n  border-radius: var(--border-radius-sm);\\n  animation: _ngcontent-%COMP%_rise 0.5s ease-out forwards;\\n  transform: scaleY(0);\\n  transform-origin: bottom;\\n}\\n\\n@keyframes _ngcontent-%COMP%_rise {\\n  from {\\n    transform: scaleY(0);\\n  }\\n  to {\\n    transform: scaleY(1);\\n  }\\n}\\n\\n.doppler-info[_ngcontent-%COMP%] {\\n  margin-top: var(--spacing-md);\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.range-info[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  color: var(--dark-gray);\\n}\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kb3BwbGVyLXJhbmdlL2RvcHBsZXItcmFuZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxjQUFjO0VBQ2QsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLE9BQU87RUFDUCxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFNBQVM7RUFDVCxPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLGtDQUFrQztFQUNsQyxRQUFRO0VBQ1IsT0FBTztFQUNQLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLDBCQUEwQjtFQUMxQixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCw4Q0FBOEM7QUFDaEQ7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG9CQUFvQjtFQUNwQixPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaOzs7O3dCQUlzQjtFQUN0QixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsOEVBQThFO0VBQzlFLHNDQUFzQztFQUN0QyxzQ0FBc0M7RUFDdEMsb0JBQW9CO0VBQ3BCLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFO0lBQ0Usb0JBQW9CO0VBQ3RCO0VBQ0E7SUFDRSxvQkFBb0I7RUFDdEI7QUFDRjs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3QixhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLHVCQUF1QjtBQUN6Qjs7QUFFQSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZG9wcGxlci1yYW5nZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBoZWlnaHQ6IDUwMHB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsMCwwLDAuMSk7XHJcbn1cclxuXHJcbi5kb3BwbGVyLWhlYWRlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG59XHJcblxyXG4uZG9wcGxlci1oZWFkZXIgaDMge1xyXG4gIG1hcmdpbjogMDtcclxuICBjb2xvcjogIzBhMjU0MDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLmhlYXRtYXAtaW5mbyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6IDE2cHg7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGNvbG9yOiAjNjY2O1xyXG59XHJcblxyXG4uaGVhdG1hcC1pbmZvIHNwYW4ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGY4ZmY7XHJcbiAgcGFkZGluZzogNHB4IDhweDtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwZDRmZjtcclxufVxyXG5cclxuLmRvcHBsZXItdmlzdWFsaXphdGlvbiB7XHJcbiAgZmxleDogMTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5oZWF0bWFwLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6IDIwcHg7XHJcbiAgZmxleDogMTtcclxufVxyXG5cclxuLmhlYXRtYXAtZ3JpZCB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDUsIDFmcik7XHJcbiAgZ2FwOiAzcHg7XHJcbiAgZmxleDogMTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG59XHJcblxyXG4uaGVhdG1hcC1jZWxsIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycztcclxuICBtaW4taGVpZ2h0OiA4MHB4O1xyXG4gIG1pbi13aWR0aDogODBweDtcclxufVxyXG5cclxuLmhlYXRtYXAtY2VsbDpob3ZlciB7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjMzMzO1xyXG59XHJcblxyXG4uY2VsbC12YWx1ZSB7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY29sb3I6ICMzMzM7XHJcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcclxufVxyXG5cclxuLmNvbG9yLWxlZ2VuZCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiA4MHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLmxlZ2VuZC10aXRsZSB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBjb2xvcjogIzMzMztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sZWdlbmQtYmFyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5sZWdlbmQtZ3JhZGllbnQge1xyXG4gIHdpZHRoOiAyMHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCBcclxuICAgIHJnYigwLCAwLCAyNTUpIDAlLCBcclxuICAgIHJnYigwLCAyNTUsIDI1NSkgMzMlLCBcclxuICAgIHJnYigyNTUsIDI1NSwgMCkgNjYlLCBcclxuICAgIHJnYigyNTUsIDAsIDApIDEwMCUpO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG59XHJcblxyXG4ubGVnZW5kLWxhYmVscyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgY29sb3I6ICM2NjY7XHJcbn1cclxuXHJcbi5sb2FkaW5nIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGNvbG9yOiAjNjY2O1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuLmRvcHBsZXItYmFyIHtcclxuICB3aWR0aDogMTUlO1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHZhcigtLXByaW1hcnktY29sb3IpLCB2YXIoLS1hY2NlbnQtY29sb3IpKTtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzLXNtKTtcclxuICBhbmltYXRpb246IHJpc2UgMC41cyBlYXNlLW91dCBmb3J3YXJkcztcclxuICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcclxuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgcmlzZSB7XHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoMSk7XHJcbiAgfVxyXG59XHJcblxyXG4uZG9wcGxlci1pbmZvIHtcclxuICBtYXJnaW4tdG9wOiB2YXIoLS1zcGFjaW5nLW1kKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuLnJhbmdlLWluZm8ge1xyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIGNvbG9yOiB2YXIoLS1kYXJrLWdyYXkpO1xyXG59XHJcblxyXG4vKiBUT0RPOiBpbXBsZW1lbnQgYW5pbWF0aW9uICovXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DopplerRangeComponent_div_4_Template_button_click_9_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","startAnimation","DopplerRangeComponent_div_4_Template_button_click_11_listener","ctx_r6","stopAnimation","DopplerRangeComponent_div_4_Template_button_click_13_listener","ctx_r7","previousFrame","DopplerRangeComponent_div_4_Template_button_click_15_listener","ctx_r8","nextFrame","DopplerRangeComponent_div_4_Template_input_input_18_listener","$event","ctx_r9","goToFrame","target","value","DopplerRangeComponent_div_4_Template_input_ngModelChange_22_listener","ctx_r10","animationSpeed","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","currentFrameIndex","totalFrames","ɵɵtextInterpolate1","minValue","toFixed","maxValue","ɵɵproperty","isAnimating","ɵɵelement","ɵɵstyleProp","cell_r12","color","row","col","ctx_r11","ɵɵtemplate","DopplerRangeComponent_div_6_div_2_Template","ctx_r1","rows","cols","heatmapCells","ɵɵtextInterpolate","DopplerRangeComponent","constructor","dataService","dopplerData","currentFrame","animationInterval","ngOnInit","fetchDopplerData","ngOnDestroy","console","log","getDoppler","subscribe","next","data","initializeData","error","rangeData","length","calculateGlobalMinMax","showFrame","allValues","forEach","frame","push","Math","max","min","frameIndex","generateHeatmapCells","setInterval","updateFrame","clearInterval","rowIndex","colIndex","normalizedValue","getViridisColor","t","r","round","g","b","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DopplerRangeComponent_Template","rf","ctx","DopplerRangeComponent_div_4_Template","DopplerRangeComponent_div_6_Template","DopplerRangeComponent_div_7_Template","DopplerRangeComponent_div_8_Template"],"sources":["C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.ts","C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\n\r\ninterface DopplerData {\r\n  \"Range-Doppler Map\": number[][][]; // Array di frame, ogni frame è una matrice 2D\r\n}\r\n\r\n@Component({\r\n  selector: 'app-doppler-range',\r\n  templateUrl: './doppler-range.component.html',\r\n  styleUrls: ['./doppler-range.component.css']\r\n})\r\nexport class DopplerRangeComponent implements OnInit, OnDestroy {\r\n  dopplerData: DopplerData | null = null;\r\n  currentFrame: number[][] = [];\r\n  heatmapCells: Array<{row: number, col: number, value: number, color: string}> = [];\r\n  maxValue: number = 0;\r\n  minValue: number = 0;\r\n  \r\n  // Animation properties (come LivePlot_class.py)\r\n  currentFrameIndex: number = 0;\r\n  totalFrames: number = 0;\r\n  isAnimating: boolean = false;\r\n  animationInterval: any = null;\r\n  animationSpeed: number = 100; // 100ms come nel LivePlot_class.py\r\n  \r\n  // Grid dimensions\r\n  rows: number = 0;\r\n  cols: number = 0;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchDopplerData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.stopAnimation();\r\n  }\r\n\r\n  fetchDopplerData(): void {\r\n    console.log('Fetching Range-Doppler Map data...');\r\n    this.dataService.getDoppler().subscribe({\r\n      next: (data: DopplerData) => {\r\n        console.log('Range-Doppler Map data received:', data);\r\n        this.dopplerData = data;\r\n        this.initializeData();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching Range-Doppler data:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initializeData(): void {\r\n    if (!this.dopplerData || !this.dopplerData['Range-Doppler Map']) {\r\n      console.error('Invalid Range-Doppler Map data');\r\n      return;\r\n    }\r\n\r\n    const rangeData = this.dopplerData['Range-Doppler Map'];\r\n    this.totalFrames = rangeData.length;\r\n    \r\n    if (this.totalFrames > 0) {\r\n      this.rows = rangeData[0].length;\r\n      this.cols = rangeData[0][0].length;\r\n      \r\n      // Calcola min/max su tutti i frame\r\n      this.calculateGlobalMinMax();\r\n      \r\n      // Mostra il primo frame\r\n      this.currentFrameIndex = 0;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  private calculateGlobalMinMax(): void {\r\n    const allValues: number[] = [];\r\n    this.dopplerData!['Range-Doppler Map'].forEach(frame => {\r\n      frame.forEach(row => {\r\n        allValues.push(...row);\r\n      });\r\n    });\r\n    \r\n    this.maxValue = Math.max(...allValues);\r\n    this.minValue = Math.min(...allValues);\r\n  }\r\n\r\n  private showFrame(frameIndex: number): void {\r\n    if (!this.dopplerData || frameIndex >= this.totalFrames) return;\r\n    \r\n    this.currentFrame = this.dopplerData['Range-Doppler Map'][frameIndex];\r\n    this.generateHeatmapCells();\r\n  }\r\n\r\n  // Metodi di controllo animazione (come LivePlot_class.py)\r\n  startAnimation(): void {\r\n    if (this.isAnimating) return;\r\n    \r\n    this.isAnimating = true;\r\n    this.currentFrameIndex = 0;\r\n    \r\n    this.animationInterval = setInterval(() => {\r\n      this.updateFrame();\r\n    }, this.animationSpeed);\r\n  }\r\n\r\n  stopAnimation(): void {\r\n    this.isAnimating = false;\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  private updateFrame(): void {\r\n    if (this.currentFrameIndex < this.totalFrames) {\r\n      this.showFrame(this.currentFrameIndex);\r\n      console.log(`Frame: ${this.currentFrameIndex}`);\r\n      this.currentFrameIndex++;\r\n    } else {\r\n      this.stopAnimation(); // Si ferma quando raggiunge l'ultimo frame\r\n    }\r\n  }\r\n\r\n  // Controlli manuali\r\n  nextFrame(): void {\r\n    if (this.currentFrameIndex < this.totalFrames - 1) {\r\n      this.currentFrameIndex++;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  previousFrame(): void {\r\n    if (this.currentFrameIndex > 0) {\r\n      this.currentFrameIndex--;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  goToFrame(frameIndex: number): void {\r\n    if (frameIndex >= 0 && frameIndex < this.totalFrames) {\r\n      this.currentFrameIndex = frameIndex;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  private generateHeatmapCells(): void {\r\n    if (!this.currentFrame || this.currentFrame.length === 0) {\r\n      console.error('Invalid current frame data');\r\n      return;\r\n    }\r\n\r\n    this.heatmapCells = [];\r\n    \r\n    this.currentFrame.forEach((row: number[], rowIndex: number) => {\r\n      row.forEach((value: number, colIndex: number) => {\r\n        // Normalizza il valore tra 0 e 1 usando i valori globali min/max\r\n        const normalizedValue = this.maxValue !== this.minValue \r\n          ? (value - this.minValue) / (this.maxValue - this.minValue)\r\n          : 0;\r\n        \r\n        // Genera colore basato sul valore (viridis-like colormap come pyqtgraph)\r\n        const color = this.getViridisColor(normalizedValue);\r\n        \r\n        this.heatmapCells.push({\r\n          row: rowIndex,\r\n          col: colIndex,\r\n          value: value,\r\n          color: color\r\n        });\r\n      });\r\n    });\r\n    \r\n    console.log(`Frame ${this.currentFrameIndex}: ${this.heatmapCells.length} cells generated`);\r\n  }\r\n\r\n  private getViridisColor(normalizedValue: number): string {\r\n    // Replica il colormap viridis di pyqtgraph\r\n    // Transizione: Viola scuro -> Blu -> Verde -> Giallo\r\n    if (normalizedValue <= 0.25) {\r\n      // Viola scuro a Blu\r\n      const t = normalizedValue / 0.25;\r\n      const r = Math.round(68 + (59 - 68) * t);\r\n      const g = Math.round(1 + (82 - 1) * t);\r\n      const b = Math.round(84 + (139 - 84) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    } else if (normalizedValue <= 0.5) {\r\n      // Blu a Verde scuro\r\n      const t = (normalizedValue - 0.25) / 0.25;\r\n      const r = Math.round(59 + (33 - 59) * t);\r\n      const g = Math.round(82 + (144 - 82) * t);\r\n      const b = Math.round(139 + (140 - 139) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    } else if (normalizedValue <= 0.75) {\r\n      // Verde scuro a Verde chiaro\r\n      const t = (normalizedValue - 0.5) / 0.25;\r\n      const r = Math.round(33 + (94 - 33) * t);\r\n      const g = Math.round(144 + (201 - 144) * t);\r\n      const b = Math.round(140 + (98 - 140) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    } else {\r\n      // Verde chiaro a Giallo\r\n      const t = (normalizedValue - 0.75) / 0.25;\r\n      const r = Math.round(94 + (253 - 94) * t);\r\n      const g = Math.round(201 + (231 - 201) * t);\r\n      const b = Math.round(98 + (37 - 98) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"doppler-range-container\">\r\n  <div class=\"doppler-header\">\r\n    <h3>Range-Doppler Map (Live Plot)</h3>\r\n    <div class=\"animation-controls\" *ngIf=\"dopplerData\">\r\n      <div class=\"frame-info\">\r\n        <span>Frame: {{ currentFrameIndex + 1 }} / {{ totalFrames }}</span>\r\n        <span>Min: {{ minValue.toFixed(2) }}</span>\r\n        <span>Max: {{ maxValue.toFixed(2) }}</span>\r\n      </div>\r\n      \r\n      <div class=\"control-buttons\">\r\n        <button (click)=\"startAnimation()\" [disabled]=\"isAnimating\" class=\"btn-play\">\r\n          {{ isAnimating ? 'Playing...' : 'Play' }}\r\n        </button>\r\n        <button (click)=\"stopAnimation()\" [disabled]=\"!isAnimating\" class=\"btn-stop\">Stop</button>\r\n        <button (click)=\"previousFrame()\" [disabled]=\"isAnimating || currentFrameIndex === 0\" class=\"btn-prev\">◀</button>\r\n        <button (click)=\"nextFrame()\" [disabled]=\"isAnimating || currentFrameIndex === totalFrames - 1\" class=\"btn-next\">▶</button>\r\n      </div>\r\n      \r\n      <div class=\"frame-slider\">\r\n        <input type=\"range\" \r\n               [min]=\"0\" \r\n               [max]=\"totalFrames - 1\" \r\n               [value]=\"currentFrameIndex\"\r\n               (input)=\"goToFrame(+$event.target.value)\"\r\n               [disabled]=\"isAnimating\"\r\n               class=\"frame-range\">\r\n      </div>\r\n      \r\n      <div class=\"speed-control\">\r\n        <label>Speed (ms): </label>\r\n        <input type=\"number\" \r\n               [(ngModel)]=\"animationSpeed\" \r\n               [min]=\"50\" \r\n               [max]=\"1000\" \r\n               [step]=\"50\"\r\n               [disabled]=\"isAnimating\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"doppler-visualization\">\r\n    <div class=\"heatmap-container\" *ngIf=\"dopplerData && heatmapCells.length > 0\">\r\n      <div class=\"heatmap-grid\" \r\n           [style.grid-template-rows]=\"'repeat(' + rows + ', 1fr)'\"\r\n           [style.grid-template-columns]=\"'repeat(' + cols + ', 1fr)'\">\r\n        <div *ngFor=\"let cell of heatmapCells\" \r\n             class=\"heatmap-cell\"\r\n             [style.background-color]=\"cell.color\"\r\n             [style.grid-row]=\"cell.row + 1\"\r\n             [style.grid-column]=\"cell.col + 1\"\r\n             [title]=\"'Frame: ' + (currentFrameIndex + 1) + ', Row: ' + cell.row + ', Col: ' + cell.col + ', Value: ' + cell.value.toFixed(4)\">\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Color Bar Legend -->\r\n      <div class=\"color-bar\">\r\n        <div class=\"color-gradient\"></div>\r\n        <div class=\"color-labels\">\r\n          <span>{{ minValue.toFixed(2) }}</span>\r\n          <span>{{ ((minValue + maxValue) / 2).toFixed(2) }}</span>\r\n          <span>{{ maxValue.toFixed(2) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"loading\" *ngIf=\"!dopplerData\">\r\n      Loading data...\r\n    </div>\r\n    \r\n    <div *ngIf=\"dopplerData && heatmapCells.length === 0\" style=\"color: red;\">\r\n      Data received but no heatmap cells generated!\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}