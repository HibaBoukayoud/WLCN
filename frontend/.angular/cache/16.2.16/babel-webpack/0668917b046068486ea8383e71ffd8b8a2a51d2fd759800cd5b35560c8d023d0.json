{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  getDoppler() {\n    return this.http.get(`${this.apiUrl}/doppler`);\n  }\n  getDopplerStream() {\n    return this.http.get(`${this.apiUrl}/doppler-stream`);\n  }\n  getAngle() {\n    return this.http.get(`${this.apiUrl}/angle`);\n  }\n  getTargets() {\n    return this.http.get(`${this.apiUrl}/targets`);\n  }\n  getChartData() {\n    return this.http.get(`${this.apiUrl}/chart-data`);\n  }\n  static {\n    this.ɵfac = function DataService_Factory(t) {\n      return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","DataService","constructor","http","apiUrl","getDoppler","get","getDopplerStream","getAngle","getTargets","getChartData","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hibab\\Pictures\\WLCN\\frontend\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDoppler(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/doppler`);\r\n  }\r\n\r\n  getDopplerStream(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/doppler-stream`);\r\n  }\r\n\r\n  getAngle(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/angle`);\r\n  }\r\n\r\n  getTargets(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/targets`);\r\n  }\r\n\r\n  getChartData(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/chart-data`);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM;EAEK;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EAChD;EAEAG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,iBAAiB,CAAC;EACvD;EAEAI,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EAC9C;EAEAK,UAAUA,CAAA;IACR,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EAChD;EAEAM,YAAYA,CAAA;IACV,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,aAAa,CAAC;EACnD;;;uBAvBWH,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXb,WAAW;MAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}