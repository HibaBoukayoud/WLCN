{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nconst _c0 = [\"chartCanvas\"];\n// Register Chart.js components\nChart.register(...registerables);\nexport class TargetChartComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    // Initialize component\n  }\n  ngAfterViewInit() {\n    this.fetchChartData();\n  }\n  fetchChartData() {\n    this.dataService.getChartData().subscribe({\n      next: data => {\n        this.initializeChart(data);\n      },\n      error: error => {\n        console.error('Error fetching chart data:', error);\n      }\n    });\n  }\n  initializeChart(data) {\n    if (!this.chartCanvas) return;\n    const ctx = this.chartCanvas.nativeElement.getContext('2d');\n    if (!ctx) return;\n    // Destroy previous chart if it exists\n    if (this.chart) {\n      this.chart.destroy();\n    }\n    // Create new chart\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: data.labels,\n        datasets: [{\n          label: data.datasets[0].label,\n          data: data.datasets[0].data,\n          backgroundColor: 'rgba(0, 212, 255, 0.2)',\n          borderColor: 'rgba(10, 37, 64, 1)',\n          borderWidth: 2,\n          tension: 0.4,\n          pointBackgroundColor: 'rgba(0, 212, 255, 1)',\n          pointBorderColor: '#fff',\n          pointRadius: 5,\n          pointHoverRadius: 7\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          title: {\n            display: true,\n            text: 'Target Detection Trends'\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TargetChartComponent_Factory(t) {\n      return new (t || TargetChartComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TargetChartComponent,\n      selectors: [[\"app-target-chart\"]],\n      viewQuery: function TargetChartComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n        }\n      },\n      decls: 3,\n      vars: 0,\n      consts: [[1, \"chart-container\"], [\"chartCanvas\", \"\"]],\n      template: function TargetChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"canvas\", null, 1);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\".chart-container[_ngcontent-%COMP%] {\\n  height: 350px;\\n  width: 100%;\\n  position: relative;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n  height: 100% !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXJnZXQtY2hhcnQvdGFyZ2V0LWNoYXJ0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsV0FBVztFQUNYLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0Qix1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDM1MHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuY2FudmFzIHtcclxuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Chart","registerables","register","TargetChartComponent","constructor","dataService","ngOnInit","ngAfterViewInit","fetchChartData","getChartData","subscribe","next","data","initializeChart","error","console","chartCanvas","ctx","nativeElement","getContext","chart","destroy","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","tension","pointBackgroundColor","pointBorderColor","pointRadius","pointHoverRadius","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","i0","ɵɵdirectiveInject","i1","DataService","selectors","viewQuery","TargetChartComponent_Query","rf","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\hibab\\Desktop\\WLCN2\\frontend\\src\\app\\components\\target-chart\\target-chart.component.ts","C:\\Users\\hibab\\Desktop\\WLCN2\\frontend\\src\\app\\components\\target-chart\\target-chart.component.html"],"sourcesContent":["import { Component, OnInit, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\n// Register Chart.js components\r\nChart.register(...registerables);\r\n\r\n@Component({\r\n  selector: 'app-target-chart',\r\n  templateUrl: './target-chart.component.html',\r\n  styleUrls: ['./target-chart.component.css']\r\n})\r\nexport class TargetChartComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('chartCanvas') chartCanvas?: ElementRef<HTMLCanvasElement>;\r\n  chart?: Chart;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize component\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.fetchChartData();\r\n  }\r\n\r\n  fetchChartData(): void {\r\n    this.dataService.getChartData().subscribe({\r\n      next: (data) => {\r\n        this.initializeChart(data);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching chart data:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeChart(data: any): void {\r\n    if (!this.chartCanvas) return;\r\n\r\n    const ctx = this.chartCanvas.nativeElement.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // Destroy previous chart if it exists\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n    }\r\n\r\n    // Create new chart\r\n    this.chart = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: data.labels,\r\n        datasets: [{\r\n          label: data.datasets[0].label,\r\n          data: data.datasets[0].data,\r\n          backgroundColor: 'rgba(0, 212, 255, 0.2)',\r\n          borderColor: 'rgba(10, 37, 64, 1)',\r\n          borderWidth: 2,\r\n          tension: 0.4,\r\n          pointBackgroundColor: 'rgba(0, 212, 255, 1)',\r\n          pointBorderColor: '#fff',\r\n          pointRadius: 5,\r\n          pointHoverRadius: 7\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Target Detection Trends'\r\n          }\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"chart-container\">\r\n  <canvas #chartCanvas></canvas>\r\n</div>\r\n"],"mappings":"AAEA,SAASA,KAAK,EAAEC,aAAa,QAAQ,UAAU;;;;AAE/C;AACAD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAOhC,OAAM,MAAOE,oBAAoB;EAI/BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQA,CAAA;IACN;EAAA;EAGFC,eAAeA,CAAA;IACb,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACH,WAAW,CAACI,YAAY,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,eAAe,CAACD,IAAI,CAAC;MAC5B,CAAC;MACDE,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;KACD,CAAC;EACJ;EAEAD,eAAeA,CAACD,IAAS;IACvB,IAAI,CAAC,IAAI,CAACI,WAAW,EAAE;IAEvB,MAAMC,GAAG,GAAG,IAAI,CAACD,WAAW,CAACE,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;IAC3D,IAAI,CAACF,GAAG,EAAE;IAEV;IACA,IAAI,IAAI,CAACG,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACC,OAAO,EAAE;;IAGtB;IACA,IAAI,CAACD,KAAK,GAAG,IAAIpB,KAAK,CAACiB,GAAG,EAAE;MAC1BK,IAAI,EAAE,MAAM;MACZV,IAAI,EAAE;QACJW,MAAM,EAAEX,IAAI,CAACW,MAAM;QACnBC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAEb,IAAI,CAACY,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK;UAC7Bb,IAAI,EAAEA,IAAI,CAACY,QAAQ,CAAC,CAAC,CAAC,CAACZ,IAAI;UAC3Bc,eAAe,EAAE,wBAAwB;UACzCC,WAAW,EAAE,qBAAqB;UAClCC,WAAW,EAAE,CAAC;UACdC,OAAO,EAAE,GAAG;UACZC,oBAAoB,EAAE,sBAAsB;UAC5CC,gBAAgB,EAAE,MAAM;UACxBC,WAAW,EAAE,CAAC;UACdC,gBAAgB,EAAE;SACnB;OACF;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,QAAQ,EAAE;WACX;UACDC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;;SAET;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;;;;KAIpB,CAAC;EACJ;;;uBAzEW1C,oBAAoB,EAAA2C,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAApB9C,oBAAoB;MAAA+C,SAAA;MAAAC,SAAA,WAAAC,2BAAAC,EAAA,EAAApC,GAAA;QAAA,IAAAoC,EAAA;;;;;;;;;;;;;UCZjCP,EAAA,CAAAQ,cAAA,aAA6B;UAC3BR,EAAA,CAAAS,SAAA,sBAA8B;UAChCT,EAAA,CAAAU,YAAA,EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}