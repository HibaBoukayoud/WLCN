{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nimport * as i2 from \"@angular/common\";\nfunction DopplerRangeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Min: \", ctx_r0.minValue.toFixed(2), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Max: \", ctx_r0.maxValue.toFixed(2), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Color Map: \", ctx_r0.dopplerData.color_map, \"\");\n  }\n}\nfunction DopplerRangeComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"span\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cell_r4 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background-color\", cell_r4.color)(\"grid-row\", cell_r4.row + 1)(\"grid-column\", cell_r4.col + 1);\n    i0.ɵɵproperty(\"title\", \"Row: \" + cell_r4.row + \", Col: \" + cell_r4.col + \", Value: \" + cell_r4.value.toFixed(3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cell_r4.value.toFixed(2));\n  }\n}\nfunction DopplerRangeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵtemplate(2, DopplerRangeComponent_div_6_div_2_Template, 3, 8, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10)(4, \"div\", 11);\n    i0.ɵɵtext(5, \"Color Scale\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 12);\n    i0.ɵɵelement(7, \"div\", 13);\n    i0.ɵɵelementStart(8, \"div\", 14)(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.heatmapCells);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.minValue.toFixed(2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.maxValue.toFixed(2));\n  }\n}\nfunction DopplerRangeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Loading heatmap data... \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DopplerRangeComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.dopplerData = null;\n    this.heatmapCells = [];\n    this.maxValue = 0;\n    this.minValue = 0;\n  }\n  ngOnInit() {\n    this.fetchDopplerData();\n  }\n  fetchDopplerData() {\n    console.log('Fetching Doppler heatmap data...');\n    console.log('Making request to data service...');\n    this.dataService.getDoppler().subscribe({\n      next: data => {\n        console.log('Doppler heatmap data received:', data);\n        console.log('Data keys:', Object.keys(data));\n        console.log('Data.data:', data.data);\n        this.dopplerData = data;\n        this.generateHeatmapCells();\n      },\n      error: error => {\n        console.error('Error fetching Doppler data:', error);\n        console.error('Error status:', error.status);\n        console.error('Error message:', error.message);\n        console.error('Full error object:', error);\n      }\n    });\n  }\n  generateHeatmapCells() {\n    if (!this.dopplerData || !this.dopplerData.data) {\n      console.error('Invalid heatmap data');\n      return;\n    }\n    const flatData = this.dopplerData.data.flat();\n    this.maxValue = Math.max(...flatData);\n    this.minValue = Math.min(...flatData);\n    this.heatmapCells = [];\n    this.dopplerData.data.forEach((row, rowIndex) => {\n      row.forEach((value, colIndex) => {\n        // Normalizza il valore tra 0 e 1\n        const normalizedValue = (value - this.minValue) / (this.maxValue - this.minValue);\n        // Genera colore basato sul valore (heatmap style)\n        const color = this.getHeatmapColor(normalizedValue);\n        this.heatmapCells.push({\n          row: rowIndex,\n          col: colIndex,\n          value: value,\n          color: color\n        });\n      });\n    });\n    console.log('Heatmap cells generated:', this.heatmapCells.length);\n  }\n  getHeatmapColor(normalizedValue) {\n    // Genera colori dal blu (0) al rosso (1) per simulare una heatmap\n    if (normalizedValue < 0.33) {\n      // Blu a Ciano\n      const intensity = Math.round(normalizedValue * 3 * 255);\n      return `rgb(0, ${intensity}, 255)`;\n    } else if (normalizedValue < 0.66) {\n      // Ciano a Giallo\n      const intensity = Math.round((normalizedValue - 0.33) * 3 * 255);\n      return `rgb(${intensity}, 255, ${255 - intensity})`;\n    } else {\n      // Giallo a Rosso\n      const intensity = Math.round((normalizedValue - 0.66) * 3 * 255);\n      return `rgb(255, ${255 - intensity}, 0)`;\n    }\n  }\n  static {\n    this.ɵfac = function DopplerRangeComponent_Factory(t) {\n      return new (t || DopplerRangeComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DopplerRangeComponent,\n      selectors: [[\"app-doppler-range\"]],\n      decls: 8,\n      vars: 4,\n      consts: [[1, \"doppler-range-container\"], [1, \"doppler-header\"], [\"class\", \"heatmap-info\", 4, \"ngIf\"], [1, \"doppler-visualization\"], [\"class\", \"heatmap-container\", 4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [1, \"heatmap-info\"], [1, \"heatmap-container\"], [1, \"heatmap-grid\"], [\"class\", \"heatmap-cell\", 3, \"background-color\", \"grid-row\", \"grid-column\", \"title\", 4, \"ngFor\", \"ngForOf\"], [1, \"color-legend\"], [1, \"legend-title\"], [1, \"legend-bar\"], [1, \"legend-gradient\"], [1, \"legend-labels\"], [1, \"heatmap-cell\", 3, \"title\"], [1, \"cell-value\"], [1, \"loading\"]],\n      template: function DopplerRangeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, DopplerRangeComponent_div_4_Template, 7, 3, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3);\n          i0.ɵɵtemplate(6, DopplerRangeComponent_div_6_Template, 13, 3, \"div\", 4);\n          i0.ɵɵtemplate(7, DopplerRangeComponent_div_7_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate((ctx.dopplerData == null ? null : ctx.dopplerData.title) || \"Heatmap\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData && ctx.heatmapCells.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.dopplerData);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\".doppler-range-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 500px;\\n  padding: 20px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n}\\n\\n.doppler-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 16px;\\n}\\n\\n.doppler-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #0a2540;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.heatmap-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 16px;\\n  font-size: 12px;\\n  color: #666;\\n}\\n\\n.heatmap-info[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  background-color: #f0f8ff;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  border: 1px solid #00d4ff;\\n}\\n\\n.doppler-visualization[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.heatmap-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 20px;\\n  flex: 1;\\n}\\n\\n.heatmap-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(5, 1fr);\\n  grid-template-rows: repeat(5, 1fr);\\n  gap: 2px;\\n  flex: 1;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 4px;\\n  background-color: #f9f9f9;\\n}\\n\\n.heatmap-cell[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  transition: transform 0.2s;\\n  min-height: 80px;\\n  min-width: 80px;\\n}\\n\\n.heatmap-cell[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.05);\\n  border: 2px solid #333;\\n}\\n\\n.cell-value[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  font-weight: 600;\\n  color: #333;\\n  text-shadow: 1px 1px 1px rgba(255,255,255,0.5);\\n}\\n\\n.color-legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 80px;\\n}\\n\\n.legend-title[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 600;\\n  margin-bottom: 10px;\\n  color: #333;\\n}\\n\\n.legend-bar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.legend-gradient[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 200px;\\n  background: linear-gradient(to top, \\n    rgb(0, 0, 255) 0%, \\n    rgb(0, 255, 255) 33%, \\n    rgb(255, 255, 0) 66%, \\n    rgb(255, 0, 0) 100%);\\n  border: 1px solid #ccc;\\n  border-radius: 3px;\\n}\\n\\n.legend-labels[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  height: 200px;\\n  margin-left: 8px;\\n  font-size: 10px;\\n  color: #666;\\n}\\n\\n.loading[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  color: #666;\\n  font-style: italic;\\n}\\n\\n.doppler-bar[_ngcontent-%COMP%] {\\n  width: 15%;\\n  background: linear-gradient(to top, var(--primary-color), var(--accent-color));\\n  border-radius: var(--border-radius-sm);\\n  animation: _ngcontent-%COMP%_rise 0.5s ease-out forwards;\\n  transform: scaleY(0);\\n  transform-origin: bottom;\\n}\\n\\n@keyframes _ngcontent-%COMP%_rise {\\n  from {\\n    transform: scaleY(0);\\n  }\\n  to {\\n    transform: scaleY(1);\\n  }\\n}\\n\\n.doppler-info[_ngcontent-%COMP%] {\\n  margin-top: var(--spacing-md);\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.range-info[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  color: var(--dark-gray);\\n}\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kb3BwbGVyLXJhbmdlL2RvcHBsZXItcmFuZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxjQUFjO0VBQ2QsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLE9BQU87RUFDUCxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFNBQVM7RUFDVCxPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLGtDQUFrQztFQUNsQyxRQUFRO0VBQ1IsT0FBTztFQUNQLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsMEJBQTBCO0VBQzFCLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLDhDQUE4QztBQUNoRDs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYjs7Ozt3QkFJc0I7RUFDdEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsOEJBQThCO0VBQzlCLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLDhFQUE4RTtFQUM5RSxzQ0FBc0M7RUFDdEMsc0NBQXNDO0VBQ3RDLG9CQUFvQjtFQUNwQix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRTtJQUNFLG9CQUFvQjtFQUN0QjtFQUNBO0lBQ0Usb0JBQW9CO0VBQ3RCO0FBQ0Y7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsYUFBYTtFQUNiLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQix1QkFBdUI7QUFDekI7O0FBRUEsOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiLmRvcHBsZXItcmFuZ2UtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgaGVpZ2h0OiA1MDBweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjEpO1xyXG59XHJcblxyXG4uZG9wcGxlci1oZWFkZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxufVxyXG5cclxuLmRvcHBsZXItaGVhZGVyIGgzIHtcclxuICBtYXJnaW46IDA7XHJcbiAgY29sb3I6ICMwYTI1NDA7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5oZWF0bWFwLWluZm8ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAxNnB4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBjb2xvcjogIzY2NjtcclxufVxyXG5cclxuLmhlYXRtYXAtaW5mbyBzcGFuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmOGZmO1xyXG4gIHBhZGRpbmc6IDRweCA4cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMGQ0ZmY7XHJcbn1cclxuXHJcbi5kb3BwbGVyLXZpc3VhbGl6YXRpb24ge1xyXG4gIGZsZXg6IDE7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4uaGVhdG1hcC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAyMHB4O1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5oZWF0bWFwLWdyaWQge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNSwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg1LCAxZnIpO1xyXG4gIGdhcDogMnB4O1xyXG4gIGZsZXg6IDE7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgcGFkZGluZzogNHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XHJcbn1cclxuXHJcbi5oZWF0bWFwLWNlbGwge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzO1xyXG4gIG1pbi1oZWlnaHQ6IDgwcHg7XHJcbiAgbWluLXdpZHRoOiA4MHB4O1xyXG59XHJcblxyXG4uaGVhdG1hcC1jZWxsOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICMzMzM7XHJcbn1cclxuXHJcbi5jZWxsLXZhbHVlIHtcclxuICBmb250LXNpemU6IDExcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBjb2xvcjogIzMzMztcclxuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgyNTUsMjU1LDI1NSwwLjUpO1xyXG59XHJcblxyXG4uY29sb3ItbGVnZW5kIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB3aWR0aDogODBweDtcclxufVxyXG5cclxuLmxlZ2VuZC10aXRsZSB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBjb2xvcjogIzMzMztcclxufVxyXG5cclxuLmxlZ2VuZC1iYXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ubGVnZW5kLWdyYWRpZW50IHtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIFxyXG4gICAgcmdiKDAsIDAsIDI1NSkgMCUsIFxyXG4gICAgcmdiKDAsIDI1NSwgMjU1KSAzMyUsIFxyXG4gICAgcmdiKDI1NSwgMjU1LCAwKSA2NiUsIFxyXG4gICAgcmdiKDI1NSwgMCwgMCkgMTAwJSk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn1cclxuXHJcbi5sZWdlbmQtbGFiZWxzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGhlaWdodDogMjAwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgY29sb3I6ICM2NjY7XHJcbn1cclxuXHJcbi5sb2FkaW5nIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGNvbG9yOiAjNjY2O1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuLmRvcHBsZXItYmFyIHtcclxuICB3aWR0aDogMTUlO1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHZhcigtLXByaW1hcnktY29sb3IpLCB2YXIoLS1hY2NlbnQtY29sb3IpKTtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzLXNtKTtcclxuICBhbmltYXRpb246IHJpc2UgMC41cyBlYXNlLW91dCBmb3J3YXJkcztcclxuICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcclxuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgcmlzZSB7XHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoMSk7XHJcbiAgfVxyXG59XHJcblxyXG4uZG9wcGxlci1pbmZvIHtcclxuICBtYXJnaW4tdG9wOiB2YXIoLS1zcGFjaW5nLW1kKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuLnJhbmdlLWluZm8ge1xyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIGNvbG9yOiB2YXIoLS1kYXJrLWdyYXkpO1xyXG59XHJcblxyXG4vKiBUT0RPOiBpbXBsZW1lbnQgYW5pbWF0aW9uICovXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","minValue","toFixed","maxValue","dopplerData","color_map","ɵɵstyleProp","cell_r4","color","row","col","ɵɵproperty","value","ɵɵtextInterpolate","ɵɵtemplate","DopplerRangeComponent_div_6_div_2_Template","ɵɵelement","ctx_r1","heatmapCells","DopplerRangeComponent","constructor","dataService","ngOnInit","fetchDopplerData","console","log","getDoppler","subscribe","next","data","Object","keys","generateHeatmapCells","error","status","message","flatData","flat","Math","max","min","forEach","rowIndex","colIndex","normalizedValue","getHeatmapColor","push","length","intensity","round","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DopplerRangeComponent_Template","rf","ctx","DopplerRangeComponent_div_4_Template","DopplerRangeComponent_div_6_Template","DopplerRangeComponent_div_7_Template","title"],"sources":["C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.ts","C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\n\r\ninterface DopplerData {\r\n  data: number[][];\r\n  title: string;\r\n  color_map: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-doppler-range',\r\n  templateUrl: './doppler-range.component.html',\r\n  styleUrls: ['./doppler-range.component.css']\r\n})\r\nexport class DopplerRangeComponent implements OnInit {\r\n  dopplerData: DopplerData | null = null;\r\n  heatmapCells: Array<{row: number, col: number, value: number, color: string}> = [];\r\n  maxValue: number = 0;\r\n  minValue: number = 0;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchDopplerData();\r\n  }\r\n\r\n  fetchDopplerData(): void {\r\n    console.log('Fetching Doppler heatmap data...');\r\n    console.log('Making request to data service...');\r\n    this.dataService.getDoppler().subscribe({\r\n      next: (data: DopplerData) => {\r\n        console.log('Doppler heatmap data received:', data);\r\n        console.log('Data keys:', Object.keys(data));\r\n        console.log('Data.data:', data.data);\r\n        this.dopplerData = data;\r\n        this.generateHeatmapCells();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching Doppler data:', error);\r\n        console.error('Error status:', error.status);\r\n        console.error('Error message:', error.message);\r\n        console.error('Full error object:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private generateHeatmapCells(): void {\r\n    if (!this.dopplerData || !this.dopplerData.data) {\r\n      console.error('Invalid heatmap data');\r\n      return;\r\n    }\r\n\r\n    const flatData = this.dopplerData.data.flat();\r\n    this.maxValue = Math.max(...flatData);\r\n    this.minValue = Math.min(...flatData);\r\n\r\n    this.heatmapCells = [];\r\n    \r\n    this.dopplerData.data.forEach((row, rowIndex) => {\r\n      row.forEach((value, colIndex) => {\r\n        // Normalizza il valore tra 0 e 1\r\n        const normalizedValue = (value - this.minValue) / (this.maxValue - this.minValue);\r\n        \r\n        // Genera colore basato sul valore (heatmap style)\r\n        const color = this.getHeatmapColor(normalizedValue);\r\n        \r\n        this.heatmapCells.push({\r\n          row: rowIndex,\r\n          col: colIndex,\r\n          value: value,\r\n          color: color\r\n        });\r\n      });\r\n    });\r\n    \r\n    console.log('Heatmap cells generated:', this.heatmapCells.length);\r\n  }\r\n\r\n  private getHeatmapColor(normalizedValue: number): string {\r\n    // Genera colori dal blu (0) al rosso (1) per simulare una heatmap\r\n    if (normalizedValue < 0.33) {\r\n      // Blu a Ciano\r\n      const intensity = Math.round(normalizedValue * 3 * 255);\r\n      return `rgb(0, ${intensity}, 255)`;\r\n    } else if (normalizedValue < 0.66) {\r\n      // Ciano a Giallo\r\n      const intensity = Math.round((normalizedValue - 0.33) * 3 * 255);\r\n      return `rgb(${intensity}, 255, ${255 - intensity})`;\r\n    } else {\r\n      // Giallo a Rosso\r\n      const intensity = Math.round((normalizedValue - 0.66) * 3 * 255);\r\n      return `rgb(255, ${255 - intensity}, 0)`;\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"doppler-range-container\">\r\n  <div class=\"doppler-header\">\r\n    <h3>{{ dopplerData?.title || 'Heatmap' }}</h3>\r\n    <div class=\"heatmap-info\" *ngIf=\"dopplerData\">\r\n      <span>Min: {{ minValue.toFixed(2) }}</span>\r\n      <span>Max: {{ maxValue.toFixed(2) }}</span>\r\n      <span>Color Map: {{ dopplerData.color_map }}</span>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"doppler-visualization\">\r\n    <div class=\"heatmap-container\" *ngIf=\"dopplerData && heatmapCells.length > 0\">\r\n      <div class=\"heatmap-grid\">\r\n        <div *ngFor=\"let cell of heatmapCells\" \r\n             class=\"heatmap-cell\"\r\n             [style.background-color]=\"cell.color\"\r\n             [style.grid-row]=\"cell.row + 1\"\r\n             [style.grid-column]=\"cell.col + 1\"\r\n             [title]=\"'Row: ' + cell.row + ', Col: ' + cell.col + ', Value: ' + cell.value.toFixed(3)\">\r\n          <span class=\"cell-value\">{{ cell.value.toFixed(2) }}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Color scale legend -->\r\n      <div class=\"color-legend\">\r\n        <div class=\"legend-title\">Color Scale</div>\r\n        <div class=\"legend-bar\">\r\n          <div class=\"legend-gradient\"></div>\r\n          <div class=\"legend-labels\">\r\n            <span>{{ minValue.toFixed(2) }}</span>\r\n            <span>{{ maxValue.toFixed(2) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"loading\" *ngIf=\"!dopplerData\">\r\n      Loading heatmap data...\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}