{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nimport * as i2 from \"@angular/common\";\nfunction DopplerRangeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Min: \", ctx_r0.minValue.toFixed(2), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Max: \", ctx_r0.maxValue.toFixed(2), \"\");\n  }\n}\nfunction DopplerRangeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"p\");\n    i0.ɵɵtext(2, \"Data received: \\u2713\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Heatmap cells: \", ctx_r1.heatmapCells.length, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Range-Doppler Map size: \", ctx_r1.dopplerData[\"Range-Doppler Map\"] ? ctx_r1.dopplerData[\"Range-Doppler Map\"].length : \"N/A\", \"\");\n  }\n}\nfunction DopplerRangeComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"span\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cell_r6 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background-color\", cell_r6.color)(\"grid-row\", cell_r6.row + 1)(\"grid-column\", cell_r6.col + 1);\n    i0.ɵɵproperty(\"title\", \"Row: \" + cell_r6.row + \", Col: \" + cell_r6.col + \", Value: \" + cell_r6.value.toFixed(3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cell_r6.value.toFixed(2));\n  }\n}\nfunction DopplerRangeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11);\n    i0.ɵɵtemplate(2, DopplerRangeComponent_div_7_div_2_Template, 3, 8, \"div\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.heatmapCells);\n  }\n}\nfunction DopplerRangeComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Loading data... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DopplerRangeComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Data received but no heatmap cells generated! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DopplerRangeComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.dopplerData = null;\n    this.currentFrame = [];\n    this.heatmapCells = [];\n    this.maxValue = 0;\n    this.minValue = 0;\n    // Animation properties (come LivePlot_class.py)\n    this.currentFrameIndex = 0;\n    this.totalFrames = 0;\n    this.isAnimating = false;\n    this.animationInterval = null;\n    this.animationSpeed = 100; // 100ms come nel LivePlot_class.py\n    // Grid dimensions\n    this.rows = 0;\n    this.cols = 0;\n  }\n  ngOnInit() {\n    this.fetchDopplerData();\n  }\n  ngOnDestroy() {\n    this.stopAnimation();\n  }\n  fetchDopplerData() {\n    console.log('Fetching Range-Doppler Map data...');\n    this.dataService.getDoppler().subscribe({\n      next: data => {\n        console.log('Range-Doppler Map data received:', data);\n        this.dopplerData = data;\n        this.initializeData();\n      },\n      error: error => {\n        console.error('Error fetching Range-Doppler data:', error);\n      }\n    });\n  }\n  initializeData() {\n    if (!this.dopplerData || !this.dopplerData['Range-Doppler Map']) {\n      console.error('Invalid Range-Doppler Map data');\n      return;\n    }\n    const rangeData = this.dopplerData['Range-Doppler Map'];\n    this.totalFrames = rangeData.length;\n    if (this.totalFrames > 0) {\n      this.rows = rangeData[0].length;\n      this.cols = rangeData[0][0].length;\n      // Calcola min/max su tutti i frame\n      this.calculateGlobalMinMax();\n      // Mostra il primo frame\n      this.currentFrameIndex = 0;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  calculateGlobalMinMax() {\n    const allValues = [];\n    this.dopplerData['Range-Doppler Map'].forEach(frame => {\n      frame.forEach(row => {\n        allValues.push(...row);\n      });\n    });\n    this.maxValue = Math.max(...allValues);\n    this.minValue = Math.min(...allValues);\n  }\n  showFrame(frameIndex) {\n    if (!this.dopplerData || frameIndex >= this.totalFrames) return;\n    this.currentFrame = this.dopplerData['Range-Doppler Map'][frameIndex];\n    this.generateHeatmapCells();\n  }\n  // Metodi di controllo animazione (come LivePlot_class.py)\n  startAnimation() {\n    if (this.isAnimating) return;\n    this.isAnimating = true;\n    this.currentFrameIndex = 0;\n    this.animationInterval = setInterval(() => {\n      this.updateFrame();\n    }, this.animationSpeed);\n  }\n  stopAnimation() {\n    this.isAnimating = false;\n    if (this.animationInterval) {\n      clearInterval(this.animationInterval);\n      this.animationInterval = null;\n    }\n  }\n  updateFrame() {\n    if (this.currentFrameIndex < this.totalFrames) {\n      this.showFrame(this.currentFrameIndex);\n      console.log(`Frame: ${this.currentFrameIndex}`);\n      this.currentFrameIndex++;\n    } else {\n      this.stopAnimation(); // Si ferma quando raggiunge l'ultimo frame\n    }\n  }\n  // Controlli manuali\n  nextFrame() {\n    if (this.currentFrameIndex < this.totalFrames - 1) {\n      this.currentFrameIndex++;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  previousFrame() {\n    if (this.currentFrameIndex > 0) {\n      this.currentFrameIndex--;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  goToFrame(frameIndex) {\n    if (frameIndex >= 0 && frameIndex < this.totalFrames) {\n      this.currentFrameIndex = frameIndex;\n      this.showFrame(this.currentFrameIndex);\n    }\n  }\n  generateHeatmapCells() {\n    if (!this.currentFrame || this.currentFrame.length === 0) {\n      console.error('Invalid current frame data');\n      return;\n    }\n    this.heatmapCells = [];\n    this.currentFrame.forEach((row, rowIndex) => {\n      row.forEach((value, colIndex) => {\n        // Normalizza il valore tra 0 e 1 usando i valori globali min/max\n        const normalizedValue = this.maxValue !== this.minValue ? (value - this.minValue) / (this.maxValue - this.minValue) : 0;\n        // Genera colore basato sul valore (viridis-like colormap come pyqtgraph)\n        const color = this.getViridisColor(normalizedValue);\n        this.heatmapCells.push({\n          row: rowIndex,\n          col: colIndex,\n          value: value,\n          color: color\n        });\n      });\n    });\n    console.log(`Frame ${this.currentFrameIndex}: ${this.heatmapCells.length} cells generated`);\n  }\n  getViridisColor(normalizedValue) {\n    // Replica il colormap viridis di pyqtgraph\n    // Transizione: Viola scuro -> Blu -> Verde -> Giallo\n    if (normalizedValue <= 0.25) {\n      // Viola scuro a Blu\n      const t = normalizedValue / 0.25;\n      const r = Math.round(68 + (59 - 68) * t);\n      const g = Math.round(1 + (82 - 1) * t);\n      const b = Math.round(84 + (139 - 84) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    } else if (normalizedValue <= 0.5) {\n      // Blu a Verde scuro\n      const t = (normalizedValue - 0.25) / 0.25;\n      const r = Math.round(59 + (33 - 59) * t);\n      const g = Math.round(82 + (144 - 82) * t);\n      const b = Math.round(139 + (140 - 139) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    } else if (normalizedValue <= 0.75) {\n      // Verde scuro a Verde chiaro\n      const t = (normalizedValue - 0.5) / 0.25;\n      const r = Math.round(33 + (94 - 33) * t);\n      const g = Math.round(144 + (201 - 144) * t);\n      const b = Math.round(140 + (98 - 140) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    } else {\n      // Verde chiaro a Giallo\n      const t = (normalizedValue - 0.75) / 0.25;\n      const r = Math.round(94 + (253 - 94) * t);\n      const g = Math.round(201 + (231 - 201) * t);\n      const b = Math.round(98 + (37 - 98) * t);\n      return `rgb(${r}, ${g}, ${b})`;\n    }\n  }\n  static {\n    this.ɵfac = function DopplerRangeComponent_Factory(t) {\n      return new (t || DopplerRangeComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DopplerRangeComponent,\n      selectors: [[\"app-doppler-range\"]],\n      decls: 10,\n      vars: 5,\n      consts: [[1, \"doppler-range-container\"], [1, \"doppler-header\"], [\"class\", \"heatmap-info\", 4, \"ngIf\"], [1, \"doppler-visualization\"], [\"style\", \"margin-bottom: 10px; font-size: 12px; color: #666;\", 4, \"ngIf\"], [\"class\", \"heatmap-container\", 4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [1, \"heatmap-info\"], [2, \"margin-bottom\", \"10px\", \"font-size\", \"12px\", \"color\", \"#666\"], [1, \"heatmap-container\"], [1, \"heatmap-grid\"], [\"class\", \"heatmap-cell\", 3, \"background-color\", \"grid-row\", \"grid-column\", \"title\", 4, \"ngFor\", \"ngForOf\"], [1, \"heatmap-cell\", 3, \"title\"], [1, \"cell-value\"], [1, \"loading\"], [2, \"color\", \"red\"]],\n      template: function DopplerRangeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n          i0.ɵɵtext(3, \"Range-Doppler Map\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, DopplerRangeComponent_div_4_Template, 5, 2, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3);\n          i0.ɵɵtemplate(6, DopplerRangeComponent_div_6_Template, 7, 2, \"div\", 4);\n          i0.ɵɵtemplate(7, DopplerRangeComponent_div_7_Template, 3, 1, \"div\", 5);\n          i0.ɵɵtemplate(8, DopplerRangeComponent_div_8_Template, 2, 0, \"div\", 6);\n          i0.ɵɵtemplate(9, DopplerRangeComponent_div_9_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData && ctx.heatmapCells.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.dopplerData);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.dopplerData && ctx.heatmapCells.length === 0);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\".doppler-range-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 500px;\\n  padding: 20px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n}\\n\\n.doppler-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 16px;\\n}\\n\\n.doppler-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #0a2540;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.heatmap-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 16px;\\n  font-size: 12px;\\n  color: #666;\\n}\\n\\n.heatmap-info[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  background-color: #f0f8ff;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  border: 1px solid #00d4ff;\\n}\\n\\n.doppler-visualization[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.heatmap-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 20px;\\n  flex: 1;\\n}\\n\\n.heatmap-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(5, 1fr);\\n  grid-template-rows: repeat(5, 1fr);\\n  gap: 3px;\\n  flex: 1;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 8px;\\n  background-color: #f9f9f9;\\n  max-width: 450px;\\n}\\n\\n.heatmap-cell[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  transition: transform 0.2s;\\n  min-height: 80px;\\n  min-width: 80px;\\n}\\n\\n.heatmap-cell[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.05);\\n  border: 2px solid #333;\\n}\\n\\n.cell-value[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  font-weight: 600;\\n  color: #333;\\n  text-shadow: 1px 1px 1px rgba(255,255,255,0.5);\\n}\\n\\n.color-legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 80px;\\n  height: 100%;\\n}\\n\\n.legend-title[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 600;\\n  margin-bottom: 10px;\\n  color: #333;\\n  text-align: center;\\n}\\n\\n.legend-bar[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: stretch;\\n  flex: 1;\\n}\\n\\n.legend-gradient[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 100%;\\n  background: linear-gradient(to top, \\n    rgb(0, 0, 255) 0%, \\n    rgb(0, 255, 255) 33%, \\n    rgb(255, 255, 0) 66%, \\n    rgb(255, 0, 0) 100%);\\n  border: 1px solid #ccc;\\n  border-radius: 3px;\\n}\\n\\n.legend-labels[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  height: 100%;\\n  margin-left: 8px;\\n  font-size: 10px;\\n  color: #666;\\n}\\n\\n.loading[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  color: #666;\\n  font-style: italic;\\n}\\n\\n.doppler-bar[_ngcontent-%COMP%] {\\n  width: 15%;\\n  background: linear-gradient(to top, var(--primary-color), var(--accent-color));\\n  border-radius: var(--border-radius-sm);\\n  animation: _ngcontent-%COMP%_rise 0.5s ease-out forwards;\\n  transform: scaleY(0);\\n  transform-origin: bottom;\\n}\\n\\n@keyframes _ngcontent-%COMP%_rise {\\n  from {\\n    transform: scaleY(0);\\n  }\\n  to {\\n    transform: scaleY(1);\\n  }\\n}\\n\\n.doppler-info[_ngcontent-%COMP%] {\\n  margin-top: var(--spacing-md);\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.range-info[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  color: var(--dark-gray);\\n}\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kb3BwbGVyLXJhbmdlL2RvcHBsZXItcmFuZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxjQUFjO0VBQ2QsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLE9BQU87RUFDUCxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFNBQVM7RUFDVCxPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLGtDQUFrQztFQUNsQyxRQUFRO0VBQ1IsT0FBTztFQUNQLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLDBCQUEwQjtFQUMxQixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCw4Q0FBOEM7QUFDaEQ7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG9CQUFvQjtFQUNwQixPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaOzs7O3dCQUlzQjtFQUN0QixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsOEVBQThFO0VBQzlFLHNDQUFzQztFQUN0QyxzQ0FBc0M7RUFDdEMsb0JBQW9CO0VBQ3BCLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFO0lBQ0Usb0JBQW9CO0VBQ3RCO0VBQ0E7SUFDRSxvQkFBb0I7RUFDdEI7QUFDRjs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3QixhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLHVCQUF1QjtBQUN6Qjs7QUFFQSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZG9wcGxlci1yYW5nZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBoZWlnaHQ6IDUwMHB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsMCwwLDAuMSk7XHJcbn1cclxuXHJcbi5kb3BwbGVyLWhlYWRlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG59XHJcblxyXG4uZG9wcGxlci1oZWFkZXIgaDMge1xyXG4gIG1hcmdpbjogMDtcclxuICBjb2xvcjogIzBhMjU0MDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLmhlYXRtYXAtaW5mbyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6IDE2cHg7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGNvbG9yOiAjNjY2O1xyXG59XHJcblxyXG4uaGVhdG1hcC1pbmZvIHNwYW4ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGY4ZmY7XHJcbiAgcGFkZGluZzogNHB4IDhweDtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwZDRmZjtcclxufVxyXG5cclxuLmRvcHBsZXItdmlzdWFsaXphdGlvbiB7XHJcbiAgZmxleDogMTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5oZWF0bWFwLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6IDIwcHg7XHJcbiAgZmxleDogMTtcclxufVxyXG5cclxuLmhlYXRtYXAtZ3JpZCB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDUsIDFmcik7XHJcbiAgZ2FwOiAzcHg7XHJcbiAgZmxleDogMTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG59XHJcblxyXG4uaGVhdG1hcC1jZWxsIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycztcclxuICBtaW4taGVpZ2h0OiA4MHB4O1xyXG4gIG1pbi13aWR0aDogODBweDtcclxufVxyXG5cclxuLmhlYXRtYXAtY2VsbDpob3ZlciB7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjMzMzO1xyXG59XHJcblxyXG4uY2VsbC12YWx1ZSB7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY29sb3I6ICMzMzM7XHJcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcclxufVxyXG5cclxuLmNvbG9yLWxlZ2VuZCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiA4MHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLmxlZ2VuZC10aXRsZSB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBjb2xvcjogIzMzMztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sZWdlbmQtYmFyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5sZWdlbmQtZ3JhZGllbnQge1xyXG4gIHdpZHRoOiAyMHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCBcclxuICAgIHJnYigwLCAwLCAyNTUpIDAlLCBcclxuICAgIHJnYigwLCAyNTUsIDI1NSkgMzMlLCBcclxuICAgIHJnYigyNTUsIDI1NSwgMCkgNjYlLCBcclxuICAgIHJnYigyNTUsIDAsIDApIDEwMCUpO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG59XHJcblxyXG4ubGVnZW5kLWxhYmVscyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgY29sb3I6ICM2NjY7XHJcbn1cclxuXHJcbi5sb2FkaW5nIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGNvbG9yOiAjNjY2O1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuLmRvcHBsZXItYmFyIHtcclxuICB3aWR0aDogMTUlO1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHZhcigtLXByaW1hcnktY29sb3IpLCB2YXIoLS1hY2NlbnQtY29sb3IpKTtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzLXNtKTtcclxuICBhbmltYXRpb246IHJpc2UgMC41cyBlYXNlLW91dCBmb3J3YXJkcztcclxuICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcclxuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgcmlzZSB7XHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoMSk7XHJcbiAgfVxyXG59XHJcblxyXG4uZG9wcGxlci1pbmZvIHtcclxuICBtYXJnaW4tdG9wOiB2YXIoLS1zcGFjaW5nLW1kKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuLnJhbmdlLWluZm8ge1xyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIGNvbG9yOiB2YXIoLS1kYXJrLWdyYXkpO1xyXG59XHJcblxyXG4vKiBUT0RPOiBpbXBsZW1lbnQgYW5pbWF0aW9uICovXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","minValue","toFixed","maxValue","ctx_r1","heatmapCells","length","dopplerData","ɵɵstyleProp","cell_r6","color","row","col","ɵɵproperty","value","ɵɵtextInterpolate","ɵɵtemplate","DopplerRangeComponent_div_7_div_2_Template","ctx_r2","DopplerRangeComponent","constructor","dataService","currentFrame","currentFrameIndex","totalFrames","isAnimating","animationInterval","animationSpeed","rows","cols","ngOnInit","fetchDopplerData","ngOnDestroy","stopAnimation","console","log","getDoppler","subscribe","next","data","initializeData","error","rangeData","calculateGlobalMinMax","showFrame","allValues","forEach","frame","push","Math","max","min","frameIndex","generateHeatmapCells","startAnimation","setInterval","updateFrame","clearInterval","nextFrame","previousFrame","goToFrame","rowIndex","colIndex","normalizedValue","getViridisColor","t","r","round","g","b","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DopplerRangeComponent_Template","rf","ctx","DopplerRangeComponent_div_4_Template","DopplerRangeComponent_div_6_Template","DopplerRangeComponent_div_7_Template","DopplerRangeComponent_div_8_Template","DopplerRangeComponent_div_9_Template"],"sources":["C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.ts","C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\n\r\ninterface DopplerData {\r\n  \"Range-Doppler Map\": number[][][]; // Array di frame, ogni frame è una matrice 2D\r\n}\r\n\r\n@Component({\r\n  selector: 'app-doppler-range',\r\n  templateUrl: './doppler-range.component.html',\r\n  styleUrls: ['./doppler-range.component.css']\r\n})\r\nexport class DopplerRangeComponent implements OnInit, OnDestroy {\r\n  dopplerData: DopplerData | null = null;\r\n  currentFrame: number[][] = [];\r\n  heatmapCells: Array<{row: number, col: number, value: number, color: string}> = [];\r\n  maxValue: number = 0;\r\n  minValue: number = 0;\r\n  \r\n  // Animation properties (come LivePlot_class.py)\r\n  currentFrameIndex: number = 0;\r\n  totalFrames: number = 0;\r\n  isAnimating: boolean = false;\r\n  animationInterval: any = null;\r\n  animationSpeed: number = 100; // 100ms come nel LivePlot_class.py\r\n  \r\n  // Grid dimensions\r\n  rows: number = 0;\r\n  cols: number = 0;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchDopplerData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.stopAnimation();\r\n  }\r\n\r\n  fetchDopplerData(): void {\r\n    console.log('Fetching Range-Doppler Map data...');\r\n    this.dataService.getDoppler().subscribe({\r\n      next: (data: DopplerData) => {\r\n        console.log('Range-Doppler Map data received:', data);\r\n        this.dopplerData = data;\r\n        this.initializeData();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching Range-Doppler data:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initializeData(): void {\r\n    if (!this.dopplerData || !this.dopplerData['Range-Doppler Map']) {\r\n      console.error('Invalid Range-Doppler Map data');\r\n      return;\r\n    }\r\n\r\n    const rangeData = this.dopplerData['Range-Doppler Map'];\r\n    this.totalFrames = rangeData.length;\r\n    \r\n    if (this.totalFrames > 0) {\r\n      this.rows = rangeData[0].length;\r\n      this.cols = rangeData[0][0].length;\r\n      \r\n      // Calcola min/max su tutti i frame\r\n      this.calculateGlobalMinMax();\r\n      \r\n      // Mostra il primo frame\r\n      this.currentFrameIndex = 0;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  private calculateGlobalMinMax(): void {\r\n    const allValues: number[] = [];\r\n    this.dopplerData!['Range-Doppler Map'].forEach(frame => {\r\n      frame.forEach(row => {\r\n        allValues.push(...row);\r\n      });\r\n    });\r\n    \r\n    this.maxValue = Math.max(...allValues);\r\n    this.minValue = Math.min(...allValues);\r\n  }\r\n\r\n  private showFrame(frameIndex: number): void {\r\n    if (!this.dopplerData || frameIndex >= this.totalFrames) return;\r\n    \r\n    this.currentFrame = this.dopplerData['Range-Doppler Map'][frameIndex];\r\n    this.generateHeatmapCells();\r\n  }\r\n\r\n  // Metodi di controllo animazione (come LivePlot_class.py)\r\n  startAnimation(): void {\r\n    if (this.isAnimating) return;\r\n    \r\n    this.isAnimating = true;\r\n    this.currentFrameIndex = 0;\r\n    \r\n    this.animationInterval = setInterval(() => {\r\n      this.updateFrame();\r\n    }, this.animationSpeed);\r\n  }\r\n\r\n  stopAnimation(): void {\r\n    this.isAnimating = false;\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  private updateFrame(): void {\r\n    if (this.currentFrameIndex < this.totalFrames) {\r\n      this.showFrame(this.currentFrameIndex);\r\n      console.log(`Frame: ${this.currentFrameIndex}`);\r\n      this.currentFrameIndex++;\r\n    } else {\r\n      this.stopAnimation(); // Si ferma quando raggiunge l'ultimo frame\r\n    }\r\n  }\r\n\r\n  // Controlli manuali\r\n  nextFrame(): void {\r\n    if (this.currentFrameIndex < this.totalFrames - 1) {\r\n      this.currentFrameIndex++;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  previousFrame(): void {\r\n    if (this.currentFrameIndex > 0) {\r\n      this.currentFrameIndex--;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  goToFrame(frameIndex: number): void {\r\n    if (frameIndex >= 0 && frameIndex < this.totalFrames) {\r\n      this.currentFrameIndex = frameIndex;\r\n      this.showFrame(this.currentFrameIndex);\r\n    }\r\n  }\r\n\r\n  private generateHeatmapCells(): void {\r\n    if (!this.currentFrame || this.currentFrame.length === 0) {\r\n      console.error('Invalid current frame data');\r\n      return;\r\n    }\r\n\r\n    this.heatmapCells = [];\r\n    \r\n    this.currentFrame.forEach((row: number[], rowIndex: number) => {\r\n      row.forEach((value: number, colIndex: number) => {\r\n        // Normalizza il valore tra 0 e 1 usando i valori globali min/max\r\n        const normalizedValue = this.maxValue !== this.minValue \r\n          ? (value - this.minValue) / (this.maxValue - this.minValue)\r\n          : 0;\r\n        \r\n        // Genera colore basato sul valore (viridis-like colormap come pyqtgraph)\r\n        const color = this.getViridisColor(normalizedValue);\r\n        \r\n        this.heatmapCells.push({\r\n          row: rowIndex,\r\n          col: colIndex,\r\n          value: value,\r\n          color: color\r\n        });\r\n      });\r\n    });\r\n    \r\n    console.log(`Frame ${this.currentFrameIndex}: ${this.heatmapCells.length} cells generated`);\r\n  }\r\n\r\n  private getViridisColor(normalizedValue: number): string {\r\n    // Replica il colormap viridis di pyqtgraph\r\n    // Transizione: Viola scuro -> Blu -> Verde -> Giallo\r\n    if (normalizedValue <= 0.25) {\r\n      // Viola scuro a Blu\r\n      const t = normalizedValue / 0.25;\r\n      const r = Math.round(68 + (59 - 68) * t);\r\n      const g = Math.round(1 + (82 - 1) * t);\r\n      const b = Math.round(84 + (139 - 84) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    } else if (normalizedValue <= 0.5) {\r\n      // Blu a Verde scuro\r\n      const t = (normalizedValue - 0.25) / 0.25;\r\n      const r = Math.round(59 + (33 - 59) * t);\r\n      const g = Math.round(82 + (144 - 82) * t);\r\n      const b = Math.round(139 + (140 - 139) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    } else if (normalizedValue <= 0.75) {\r\n      // Verde scuro a Verde chiaro\r\n      const t = (normalizedValue - 0.5) / 0.25;\r\n      const r = Math.round(33 + (94 - 33) * t);\r\n      const g = Math.round(144 + (201 - 144) * t);\r\n      const b = Math.round(140 + (98 - 140) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    } else {\r\n      // Verde chiaro a Giallo\r\n      const t = (normalizedValue - 0.75) / 0.25;\r\n      const r = Math.round(94 + (253 - 94) * t);\r\n      const g = Math.round(201 + (231 - 201) * t);\r\n      const b = Math.round(98 + (37 - 98) * t);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"doppler-range-container\">\r\n  <div class=\"doppler-header\">\r\n    <h3>Range-Doppler Map</h3>\r\n    <div class=\"heatmap-info\" *ngIf=\"dopplerData\">\r\n      <span>Min: {{ minValue.toFixed(2) }}</span>\r\n      <span>Max: {{ maxValue.toFixed(2) }}</span>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"doppler-visualization\">\r\n    <!-- Debug info -->\r\n    <div *ngIf=\"dopplerData\" style=\"margin-bottom: 10px; font-size: 12px; color: #666;\">\r\n      <p>Data received: ✓</p>\r\n      <p>Heatmap cells: {{ heatmapCells.length }}</p>\r\n      <p>Range-Doppler Map size: {{ dopplerData['Range-Doppler Map'] ? dopplerData['Range-Doppler Map'].length : 'N/A' }}</p>\r\n    </div>\r\n    \r\n    <div class=\"heatmap-container\" *ngIf=\"dopplerData && heatmapCells.length > 0\">\r\n      <div class=\"heatmap-grid\">\r\n        <div *ngFor=\"let cell of heatmapCells\" \r\n             class=\"heatmap-cell\"\r\n             [style.background-color]=\"cell.color\"\r\n             [style.grid-row]=\"cell.row + 1\"\r\n             [style.grid-column]=\"cell.col + 1\"\r\n             [title]=\"'Row: ' + cell.row + ', Col: ' + cell.col + ', Value: ' + cell.value.toFixed(3)\">\r\n          <span class=\"cell-value\">{{ cell.value.toFixed(2) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"loading\" *ngIf=\"!dopplerData\">\r\n      Loading data...\r\n    </div>\r\n    \r\n    <div *ngIf=\"dopplerData && heatmapCells.length === 0\" style=\"color: red;\">\r\n      Data received but no heatmap cells generated!\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}