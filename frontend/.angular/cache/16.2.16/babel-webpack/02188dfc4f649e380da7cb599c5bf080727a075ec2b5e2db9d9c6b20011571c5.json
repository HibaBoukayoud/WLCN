{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, IterableDiffers, KeyValueDiffers, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { __awaiter } from 'tslib';\nclass PlotlyService {\n  static setModuleName(moduleName) {\n    PlotlyService.moduleName = moduleName;\n  }\n  static getModuleName() {\n    return PlotlyService.moduleName;\n  }\n  static setPlotly(plotly) {\n    if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\n      throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\n    }\n    PlotlyService.plotly = plotly;\n  }\n  static insert(instance) {\n    const index = PlotlyService.instances.indexOf(instance);\n    if (index === -1) {\n      PlotlyService.instances.push(instance);\n    }\n    return instance;\n  }\n  static remove(div) {\n    const index = PlotlyService.instances.indexOf(div);\n    if (index >= 0) {\n      PlotlyService.instances.splice(index, 1);\n      PlotlyService.plotly.purge(div);\n    }\n  }\n  getInstanceByDivId(id) {\n    for (const instance of PlotlyService.instances) {\n      if (instance && instance.id === id) {\n        return instance;\n      }\n    }\n    return undefined;\n  }\n  getPlotly() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.waitFor(() => this._getPlotly() !== 'waiting');\n      return this._getPlotly();\n    });\n  }\n  _getPlotly() {\n    if (typeof PlotlyService.plotly === 'undefined') {\n      const msg = PlotlyService.moduleName === 'ViaCDN' ? `Error loading Peer dependency plotly.js from CDN url` : `Peer dependency plotly.js isn't installed`;\n      throw new Error(msg);\n    }\n    return PlotlyService.plotly;\n  }\n  waitFor(fn) {\n    return new Promise(resolve => {\n      const localFn = () => {\n        fn() ? resolve() : setTimeout(localFn, 10);\n      };\n      localFn();\n    });\n  }\n  // tslint:disable max-line-length\n  newPlot(div, data, layout, config, frames) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.waitFor(() => this._getPlotly() !== 'waiting');\n      if (frames) {\n        const obj = {\n          data,\n          layout,\n          config,\n          frames\n        };\n        return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div));\n      }\n      return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div));\n    });\n  }\n  plot(div, data, layout, config, frames) {\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      if (typeof this._getPlotly().plot === 'function') {\n        return this._getPlotly().plot(div, obj);\n      } else {\n        // Adds support for Plotly 2.0.0 release candidates\n        return this._getPlotly().newPlot(div, obj);\n      }\n    }\n    if (typeof this._getPlotly().plot === 'function') {\n      return this._getPlotly().plot(div, data, layout, config);\n    } else {\n      // Adds support for Plotly 2.0.0 release candidates\n      return this._getPlotly().newPlot(div, data, layout, config);\n    }\n  }\n  update(div, data, layout, config, frames) {\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      return this._getPlotly().react(div, obj);\n    }\n    return this._getPlotly().react(div, data, layout, config);\n  }\n  // tslint:enable max-line-length\n  resize(div) {\n    return this._getPlotly().Plots.resize(div);\n  }\n}\nPlotlyService.instances = [];\nPlotlyService.plotly = undefined;\nPlotlyService.moduleName = undefined;\nPlotlyService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function PlotlyService_Factory() {\n    return new PlotlyService();\n  },\n  token: PlotlyService,\n  providedIn: \"root\"\n});\nPlotlyService.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n\n/* tslint:disable component-selector no-output-native no-conflicting-lifecycle */\n// @dynamic\nclass PlotlyComponent {\n  constructor(plotly, iterableDiffers, keyValueDiffers) {\n    this.plotly = plotly;\n    this.iterableDiffers = iterableDiffers;\n    this.keyValueDiffers = keyValueDiffers;\n    this.defaultClassName = 'js-plotly-plot';\n    this.revision = 0;\n    this.debug = false;\n    this.useResizeHandler = false;\n    this.updateOnLayoutChange = true;\n    this.updateOnDataChange = true;\n    this.updateOnlyWithRevision = false;\n    this.initialized = new EventEmitter();\n    this.update = new EventEmitter();\n    this.purge = new EventEmitter();\n    this.error = new EventEmitter();\n    this.afterExport = new EventEmitter();\n    this.afterPlot = new EventEmitter();\n    this.animated = new EventEmitter();\n    this.animatingFrame = new EventEmitter();\n    this.animationInterrupted = new EventEmitter();\n    this.autoSize = new EventEmitter();\n    this.beforeExport = new EventEmitter();\n    this.buttonClicked = new EventEmitter();\n    this.click = new EventEmitter();\n    this.plotlyClick = new EventEmitter();\n    this.clickAnnotation = new EventEmitter();\n    this.deselect = new EventEmitter();\n    this.doubleClick = new EventEmitter();\n    this.framework = new EventEmitter();\n    this.hover = new EventEmitter();\n    this.legendClick = new EventEmitter();\n    this.legendDoubleClick = new EventEmitter();\n    this.react = new EventEmitter();\n    this.relayout = new EventEmitter();\n    this.restyle = new EventEmitter();\n    this.redraw = new EventEmitter();\n    this.selected = new EventEmitter();\n    this.selecting = new EventEmitter();\n    this.sliderChange = new EventEmitter();\n    this.sliderEnd = new EventEmitter();\n    this.sliderStart = new EventEmitter();\n    this.transitioning = new EventEmitter();\n    this.transitionInterrupted = new EventEmitter();\n    this.unhover = new EventEmitter();\n    this.relayouting = new EventEmitter();\n    this.treemapclick = new EventEmitter();\n    this.sunburstclick = new EventEmitter();\n    this.eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize', 'beforeExport', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover', 'legendClick', 'legendDoubleClick', 'react', 'relayout', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange', 'sliderEnd', 'sliderStart', 'transitioning', 'transitionInterrupted', 'unhover', 'relayouting', 'treemapclick', 'sunburstclick'];\n  }\n  ngOnInit() {\n    this.createPlot().then(() => {\n      const figure = this.createFigure();\n      this.initialized.emit(figure);\n    });\n    if (this.click.observers.length > 0) {\n      const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. ' + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\n      console.error(msg);\n    }\n  }\n  ngOnDestroy() {\n    if (typeof this.resizeHandler === 'function') {\n      this.getWindow().removeEventListener('resize', this.resizeHandler);\n      this.resizeHandler = undefined;\n    }\n    const figure = this.createFigure();\n    this.purge.emit(figure);\n    PlotlyService.remove(this.plotlyInstance);\n  }\n  ngOnChanges(changes) {\n    let shouldUpdate = false;\n    const revision = changes.revision;\n    if (revision && !revision.isFirstChange()) {\n      shouldUpdate = true;\n    }\n    const debug = changes.debug;\n    if (debug && !debug.isFirstChange()) {\n      shouldUpdate = true;\n    }\n    if (shouldUpdate) {\n      this.updatePlot();\n    }\n    this.updateWindowResizeHandler();\n  }\n  ngDoCheck() {\n    if (this.updateOnlyWithRevision) {\n      return false;\n    }\n    let shouldUpdate = false;\n    if (this.updateOnLayoutChange) {\n      if (this.layoutDiffer) {\n        const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n        if (layoutHasDiff) {\n          shouldUpdate = true;\n        }\n      } else if (this.layout) {\n        this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n      } else {\n        this.layoutDiffer = undefined;\n      }\n    }\n    if (this.updateOnDataChange) {\n      if (this.dataDiffer) {\n        const dataHasDiff = this.dataDiffer.diff(this.data);\n        if (dataHasDiff) {\n          shouldUpdate = true;\n        }\n      } else if (Array.isArray(this.data)) {\n        this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n      } else {\n        this.dataDiffer = undefined;\n      }\n    }\n    if (shouldUpdate && this.plotlyInstance) {\n      this.updatePlot();\n    }\n  }\n  getWindow() {\n    return window;\n  }\n  getClassName() {\n    let classes = [this.defaultClassName];\n    if (Array.isArray(this.className)) {\n      classes = classes.concat(this.className);\n    } else if (this.className) {\n      classes.push(this.className);\n    }\n    return classes.join(' ');\n  }\n  createPlot() {\n    return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config, this.frames).then(plotlyInstance => {\n      this.plotlyInstance = plotlyInstance;\n      this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n      this.eventNames.forEach(name => {\n        const eventName = `plotly_${name.toLowerCase()}`;\n        plotlyInstance.on(eventName, data => this[name].emit(data));\n      });\n      plotlyInstance.on('plotly_click', data => {\n        this.click.emit(data);\n        this.plotlyClick.emit(data);\n      });\n      this.updateWindowResizeHandler();\n    }, err => {\n      console.error('Error while plotting:', err);\n      this.error.emit(err);\n    });\n  }\n  createFigure() {\n    const p = this.plotlyInstance;\n    const figure = {\n      data: p.data,\n      layout: p.layout,\n      frames: p._transitionData ? p._transitionData._frames : null\n    };\n    return figure;\n  }\n  updatePlot() {\n    if (!this.plotlyInstance) {\n      const error = new Error(`Plotly component wasn't initialized`);\n      this.error.emit(error);\n      throw error;\n    }\n    const layout = Object.assign({}, this.layout);\n    return this.plotly.update(this.plotlyInstance, this.data, layout, this.config, this.frames).then(() => {\n      const figure = this.createFigure();\n      this.update.emit(figure);\n    }, err => {\n      console.error('Error while updating plot:', err);\n      this.error.emit(err);\n    });\n  }\n  updateWindowResizeHandler() {\n    if (this.useResizeHandler) {\n      if (this.resizeHandler === undefined) {\n        this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n        this.getWindow().addEventListener('resize', this.resizeHandler);\n      }\n    } else {\n      if (typeof this.resizeHandler === 'function') {\n        this.getWindow().removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = undefined;\n      }\n    }\n  }\n  dataDifferTrackBy(_, item) {\n    const obj = Object.assign({}, item, {\n      uid: ''\n    });\n    return JSON.stringify(obj);\n  }\n}\nPlotlyComponent.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'plotly-plot',\n    template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\n      <ng-content></ng-content>\n    </div>`,\n    providers: [PlotlyService]\n  }]\n}];\nPlotlyComponent.ctorParameters = () => [{\n  type: PlotlyService\n}, {\n  type: IterableDiffers\n}, {\n  type: KeyValueDiffers\n}];\nPlotlyComponent.propDecorators = {\n  plotEl: [{\n    type: ViewChild,\n    args: ['plot', {\n      static: true\n    }]\n  }],\n  data: [{\n    type: Input\n  }],\n  layout: [{\n    type: Input\n  }],\n  config: [{\n    type: Input\n  }],\n  frames: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  divId: [{\n    type: Input\n  }],\n  revision: [{\n    type: Input\n  }],\n  className: [{\n    type: Input\n  }],\n  debug: [{\n    type: Input\n  }],\n  useResizeHandler: [{\n    type: Input\n  }],\n  updateOnLayoutChange: [{\n    type: Input\n  }],\n  updateOnDataChange: [{\n    type: Input\n  }],\n  updateOnlyWithRevision: [{\n    type: Input\n  }],\n  initialized: [{\n    type: Output\n  }],\n  update: [{\n    type: Output\n  }],\n  purge: [{\n    type: Output\n  }],\n  error: [{\n    type: Output\n  }],\n  afterExport: [{\n    type: Output\n  }],\n  afterPlot: [{\n    type: Output\n  }],\n  animated: [{\n    type: Output\n  }],\n  animatingFrame: [{\n    type: Output\n  }],\n  animationInterrupted: [{\n    type: Output\n  }],\n  autoSize: [{\n    type: Output\n  }],\n  beforeExport: [{\n    type: Output\n  }],\n  buttonClicked: [{\n    type: Output\n  }],\n  click: [{\n    type: Output\n  }],\n  plotlyClick: [{\n    type: Output\n  }],\n  clickAnnotation: [{\n    type: Output\n  }],\n  deselect: [{\n    type: Output\n  }],\n  doubleClick: [{\n    type: Output\n  }],\n  framework: [{\n    type: Output\n  }],\n  hover: [{\n    type: Output\n  }],\n  legendClick: [{\n    type: Output\n  }],\n  legendDoubleClick: [{\n    type: Output\n  }],\n  react: [{\n    type: Output\n  }],\n  relayout: [{\n    type: Output\n  }],\n  restyle: [{\n    type: Output\n  }],\n  redraw: [{\n    type: Output\n  }],\n  selected: [{\n    type: Output\n  }],\n  selecting: [{\n    type: Output\n  }],\n  sliderChange: [{\n    type: Output\n  }],\n  sliderEnd: [{\n    type: Output\n  }],\n  sliderStart: [{\n    type: Output\n  }],\n  transitioning: [{\n    type: Output\n  }],\n  transitionInterrupted: [{\n    type: Output\n  }],\n  unhover: [{\n    type: Output\n  }],\n  relayouting: [{\n    type: Output\n  }],\n  treemapclick: [{\n    type: Output\n  }],\n  sunburstclick: [{\n    type: Output\n  }]\n};\nclass PlotlySharedModule {\n  constructor() {}\n}\nPlotlySharedModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [PlotlyComponent],\n    imports: [CommonModule],\n    providers: [PlotlyService],\n    exports: [PlotlyComponent]\n  }]\n}];\nPlotlySharedModule.ctorParameters = () => [];\nclass PlotlyModule {\n  constructor() {\n    if (!this.isValid()) {\n      const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start' + ' to see how to add PlotlyJS to your project.';\n      throw new Error(msg);\n    }\n    PlotlyService.setPlotly(PlotlyModule.plotlyjs);\n  }\n  isValid() {\n    return PlotlyModule.plotlyjs !== undefined && (typeof PlotlyModule.plotlyjs.plot === 'function' || typeof PlotlyModule.plotlyjs.newPlot === 'function');\n  }\n}\nPlotlyModule.plotlyjs = {};\nPlotlyModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule]\n  }]\n}];\nPlotlyModule.ctorParameters = () => [];\nclass PlotlyViaCDNModule {\n  constructor(plotlyService) {\n    this.plotlyService = plotlyService;\n    PlotlyService.setModuleName('ViaCDN');\n  }\n  static setPlotlyVersion(version) {\n    const isOk = version === 'latest' || /^\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\n    if (!isOk) {\n      throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3)`);\n    }\n    PlotlyViaCDNModule.loadViaCDN();\n    PlotlyViaCDNModule.plotlyVersion = version;\n  }\n  static setPlotlyBundle(bundle) {\n    const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\n    if (!isOk) {\n      const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\n      throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\n    }\n    PlotlyViaCDNModule.plotlyBundle = bundle;\n  }\n  static loadViaCDN() {\n    PlotlyService.setPlotly('waiting');\n    const init = () => {\n      const src = PlotlyViaCDNModule.plotlyBundle == null ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js` : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = src;\n      script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\n      const head = document.getElementsByTagName('head')[0];\n      head.appendChild(script);\n      let counter = 200; // equivalent of 10 seconds...\n      const fn = () => {\n        const plotly = window.Plotly;\n        if (plotly) {\n          PlotlyService.setPlotly(plotly);\n        } else if (counter > 0) {\n          counter--;\n          setTimeout(fn, 50);\n        } else {\n          throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\n        }\n      };\n      fn();\n    };\n    setTimeout(init);\n  }\n}\nPlotlyViaCDNModule.plotlyBundle = null;\nPlotlyViaCDNModule.plotlyVersion = 'latest';\nPlotlyViaCDNModule.plotlyBundleNames = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\nPlotlyViaCDNModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule]\n  }]\n}];\nPlotlyViaCDNModule.ctorParameters = () => [{\n  type: PlotlyService\n}];\nclass PlotlyViaWindowModule {\n  constructor() {\n    const plotly = window.Plotly;\n    if (typeof plotly === 'undefined') {\n      throw new Error(`Plotly object not found on window.`);\n    }\n    PlotlyService.setPlotly(plotly);\n  }\n}\nPlotlyViaWindowModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule]\n  }]\n}];\nPlotlyViaWindowModule.ctorParameters = () => [];\n\n/*\n * Public API Surface of plotly\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PlotlyComponent, PlotlyModule, PlotlyService, PlotlyViaCDNModule, PlotlyViaWindowModule, PlotlySharedModule as ɵa };","map":{"version":3,"names":["i0","Injectable","EventEmitter","Component","IterableDiffers","KeyValueDiffers","ViewChild","Input","Output","NgModule","CommonModule","__awaiter","PlotlyService","setModuleName","moduleName","getModuleName","setPlotly","plotly","react","Error","insert","instance","index","instances","indexOf","push","remove","div","splice","purge","getInstanceByDivId","id","undefined","getPlotly","waitFor","_getPlotly","msg","fn","Promise","resolve","localFn","setTimeout","newPlot","data","layout","config","frames","obj","then","plot","update","resize","Plots","ɵprov","ɵɵdefineInjectable","factory","PlotlyService_Factory","token","providedIn","decorators","type","args","PlotlyComponent","constructor","iterableDiffers","keyValueDiffers","defaultClassName","revision","debug","useResizeHandler","updateOnLayoutChange","updateOnDataChange","updateOnlyWithRevision","initialized","error","afterExport","afterPlot","animated","animatingFrame","animationInterrupted","autoSize","beforeExport","buttonClicked","click","plotlyClick","clickAnnotation","deselect","doubleClick","framework","hover","legendClick","legendDoubleClick","relayout","restyle","redraw","selected","selecting","sliderChange","sliderEnd","sliderStart","transitioning","transitionInterrupted","unhover","relayouting","treemapclick","sunburstclick","eventNames","ngOnInit","createPlot","figure","createFigure","emit","observers","length","console","ngOnDestroy","resizeHandler","getWindow","removeEventListener","plotlyInstance","ngOnChanges","changes","shouldUpdate","isFirstChange","updatePlot","updateWindowResizeHandler","ngDoCheck","layoutDiffer","layoutHasDiff","diff","find","create","dataDiffer","dataHasDiff","Array","isArray","dataDifferTrackBy","window","getClassName","classes","className","concat","join","plotEl","nativeElement","gd","forEach","name","eventName","toLowerCase","on","err","p","_transitionData","_frames","Object","assign","addEventListener","_","item","uid","JSON","stringify","selector","template","providers","ctorParameters","propDecorators","static","style","divId","PlotlySharedModule","declarations","imports","exports","PlotlyModule","isValid","plotlyjs","PlotlyViaCDNModule","plotlyService","setPlotlyVersion","version","isOk","test","loadViaCDN","plotlyVersion","setPlotlyBundle","bundle","plotlyBundleNames","names","map","n","plotlyBundle","init","src","script","document","createElement","onerror","head","getElementsByTagName","appendChild","counter","Plotly","PlotlyViaWindowModule","ɵa"],"sources":["C:/Users/hibab/Desktop/WLCN/frontend/node_modules/angular-plotly.js/fesm2015/angular-plotly.js.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, IterableDiffers, KeyValueDiffers, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { __awaiter } from 'tslib';\n\nclass PlotlyService {\n    static setModuleName(moduleName) {\n        PlotlyService.moduleName = moduleName;\n    }\n    static getModuleName() {\n        return PlotlyService.moduleName;\n    }\n    static setPlotly(plotly) {\n        if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\n            throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\n        }\n        PlotlyService.plotly = plotly;\n    }\n    static insert(instance) {\n        const index = PlotlyService.instances.indexOf(instance);\n        if (index === -1) {\n            PlotlyService.instances.push(instance);\n        }\n        return instance;\n    }\n    static remove(div) {\n        const index = PlotlyService.instances.indexOf(div);\n        if (index >= 0) {\n            PlotlyService.instances.splice(index, 1);\n            PlotlyService.plotly.purge(div);\n        }\n    }\n    getInstanceByDivId(id) {\n        for (const instance of PlotlyService.instances) {\n            if (instance && instance.id === id) {\n                return instance;\n            }\n        }\n        return undefined;\n    }\n    getPlotly() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.waitFor(() => this._getPlotly() !== 'waiting');\n            return this._getPlotly();\n        });\n    }\n    _getPlotly() {\n        if (typeof PlotlyService.plotly === 'undefined') {\n            const msg = PlotlyService.moduleName === 'ViaCDN'\n                ? `Error loading Peer dependency plotly.js from CDN url`\n                : `Peer dependency plotly.js isn't installed`;\n            throw new Error(msg);\n        }\n        return PlotlyService.plotly;\n    }\n    waitFor(fn) {\n        return new Promise((resolve) => {\n            const localFn = () => {\n                fn() ? resolve() : setTimeout(localFn, 10);\n            };\n            localFn();\n        });\n    }\n    // tslint:disable max-line-length\n    newPlot(div, data, layout, config, frames) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.waitFor(() => this._getPlotly() !== 'waiting');\n            if (frames) {\n                const obj = { data, layout, config, frames };\n                return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div));\n            }\n            return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div));\n        });\n    }\n    plot(div, data, layout, config, frames) {\n        if (frames) {\n            const obj = { data, layout, config, frames };\n            if (typeof (this._getPlotly().plot) === 'function') {\n                return this._getPlotly().plot(div, obj);\n            }\n            else {\n                // Adds support for Plotly 2.0.0 release candidates\n                return this._getPlotly().newPlot(div, obj);\n            }\n        }\n        if (typeof (this._getPlotly().plot) === 'function') {\n            return this._getPlotly().plot(div, data, layout, config);\n        }\n        else {\n            // Adds support for Plotly 2.0.0 release candidates\n            return this._getPlotly().newPlot(div, data, layout, config);\n        }\n    }\n    update(div, data, layout, config, frames) {\n        if (frames) {\n            const obj = { data, layout, config, frames };\n            return this._getPlotly().react(div, obj);\n        }\n        return this._getPlotly().react(div, data, layout, config);\n    }\n    // tslint:enable max-line-length\n    resize(div) {\n        return this._getPlotly().Plots.resize(div);\n    }\n}\nPlotlyService.instances = [];\nPlotlyService.plotly = undefined;\nPlotlyService.moduleName = undefined;\nPlotlyService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PlotlyService_Factory() { return new PlotlyService(); }, token: PlotlyService, providedIn: \"root\" });\nPlotlyService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n\n/* tslint:disable component-selector no-output-native no-conflicting-lifecycle */\n// @dynamic\nclass PlotlyComponent {\n    constructor(plotly, iterableDiffers, keyValueDiffers) {\n        this.plotly = plotly;\n        this.iterableDiffers = iterableDiffers;\n        this.keyValueDiffers = keyValueDiffers;\n        this.defaultClassName = 'js-plotly-plot';\n        this.revision = 0;\n        this.debug = false;\n        this.useResizeHandler = false;\n        this.updateOnLayoutChange = true;\n        this.updateOnDataChange = true;\n        this.updateOnlyWithRevision = false;\n        this.initialized = new EventEmitter();\n        this.update = new EventEmitter();\n        this.purge = new EventEmitter();\n        this.error = new EventEmitter();\n        this.afterExport = new EventEmitter();\n        this.afterPlot = new EventEmitter();\n        this.animated = new EventEmitter();\n        this.animatingFrame = new EventEmitter();\n        this.animationInterrupted = new EventEmitter();\n        this.autoSize = new EventEmitter();\n        this.beforeExport = new EventEmitter();\n        this.buttonClicked = new EventEmitter();\n        this.click = new EventEmitter();\n        this.plotlyClick = new EventEmitter();\n        this.clickAnnotation = new EventEmitter();\n        this.deselect = new EventEmitter();\n        this.doubleClick = new EventEmitter();\n        this.framework = new EventEmitter();\n        this.hover = new EventEmitter();\n        this.legendClick = new EventEmitter();\n        this.legendDoubleClick = new EventEmitter();\n        this.react = new EventEmitter();\n        this.relayout = new EventEmitter();\n        this.restyle = new EventEmitter();\n        this.redraw = new EventEmitter();\n        this.selected = new EventEmitter();\n        this.selecting = new EventEmitter();\n        this.sliderChange = new EventEmitter();\n        this.sliderEnd = new EventEmitter();\n        this.sliderStart = new EventEmitter();\n        this.transitioning = new EventEmitter();\n        this.transitionInterrupted = new EventEmitter();\n        this.unhover = new EventEmitter();\n        this.relayouting = new EventEmitter();\n        this.treemapclick = new EventEmitter();\n        this.sunburstclick = new EventEmitter();\n        this.eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\n            'beforeExport', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\n            'legendClick', 'legendDoubleClick', 'react', 'relayout', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\n            'sliderEnd', 'sliderStart', 'transitioning', 'transitionInterrupted', 'unhover', 'relayouting', 'treemapclick',\n            'sunburstclick'];\n    }\n    ngOnInit() {\n        this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.initialized.emit(figure);\n        });\n        if (this.click.observers.length > 0) {\n            const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. '\n                + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\n            console.error(msg);\n        }\n    }\n    ngOnDestroy() {\n        if (typeof this.resizeHandler === 'function') {\n            this.getWindow().removeEventListener('resize', this.resizeHandler);\n            this.resizeHandler = undefined;\n        }\n        const figure = this.createFigure();\n        this.purge.emit(figure);\n        PlotlyService.remove(this.plotlyInstance);\n    }\n    ngOnChanges(changes) {\n        let shouldUpdate = false;\n        const revision = changes.revision;\n        if (revision && !revision.isFirstChange()) {\n            shouldUpdate = true;\n        }\n        const debug = changes.debug;\n        if (debug && !debug.isFirstChange()) {\n            shouldUpdate = true;\n        }\n        if (shouldUpdate) {\n            this.updatePlot();\n        }\n        this.updateWindowResizeHandler();\n    }\n    ngDoCheck() {\n        if (this.updateOnlyWithRevision) {\n            return false;\n        }\n        let shouldUpdate = false;\n        if (this.updateOnLayoutChange) {\n            if (this.layoutDiffer) {\n                const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n                if (layoutHasDiff) {\n                    shouldUpdate = true;\n                }\n            }\n            else if (this.layout) {\n                this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n            }\n            else {\n                this.layoutDiffer = undefined;\n            }\n        }\n        if (this.updateOnDataChange) {\n            if (this.dataDiffer) {\n                const dataHasDiff = this.dataDiffer.diff(this.data);\n                if (dataHasDiff) {\n                    shouldUpdate = true;\n                }\n            }\n            else if (Array.isArray(this.data)) {\n                this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n            }\n            else {\n                this.dataDiffer = undefined;\n            }\n        }\n        if (shouldUpdate && this.plotlyInstance) {\n            this.updatePlot();\n        }\n    }\n    getWindow() {\n        return window;\n    }\n    getClassName() {\n        let classes = [this.defaultClassName];\n        if (Array.isArray(this.className)) {\n            classes = classes.concat(this.className);\n        }\n        else if (this.className) {\n            classes.push(this.className);\n        }\n        return classes.join(' ');\n    }\n    createPlot() {\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config, this.frames).then(plotlyInstance => {\n            this.plotlyInstance = plotlyInstance;\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n            this.eventNames.forEach(name => {\n                const eventName = `plotly_${name.toLowerCase()}`;\n                plotlyInstance.on(eventName, (data) => this[name].emit(data));\n            });\n            plotlyInstance.on('plotly_click', (data) => {\n                this.click.emit(data);\n                this.plotlyClick.emit(data);\n            });\n            this.updateWindowResizeHandler();\n        }, err => {\n            console.error('Error while plotting:', err);\n            this.error.emit(err);\n        });\n    }\n    createFigure() {\n        const p = this.plotlyInstance;\n        const figure = {\n            data: p.data,\n            layout: p.layout,\n            frames: p._transitionData ? p._transitionData._frames : null\n        };\n        return figure;\n    }\n    updatePlot() {\n        if (!this.plotlyInstance) {\n            const error = new Error(`Plotly component wasn't initialized`);\n            this.error.emit(error);\n            throw error;\n        }\n        const layout = Object.assign({}, this.layout);\n        return this.plotly.update(this.plotlyInstance, this.data, layout, this.config, this.frames).then(() => {\n            const figure = this.createFigure();\n            this.update.emit(figure);\n        }, err => {\n            console.error('Error while updating plot:', err);\n            this.error.emit(err);\n        });\n    }\n    updateWindowResizeHandler() {\n        if (this.useResizeHandler) {\n            if (this.resizeHandler === undefined) {\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n                this.getWindow().addEventListener('resize', this.resizeHandler);\n            }\n        }\n        else {\n            if (typeof this.resizeHandler === 'function') {\n                this.getWindow().removeEventListener('resize', this.resizeHandler);\n                this.resizeHandler = undefined;\n            }\n        }\n    }\n    dataDifferTrackBy(_, item) {\n        const obj = Object.assign({}, item, { uid: '' });\n        return JSON.stringify(obj);\n    }\n}\nPlotlyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'plotly-plot',\n                template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\n      <ng-content></ng-content>\n    </div>`,\n                providers: [PlotlyService]\n            },] }\n];\nPlotlyComponent.ctorParameters = () => [\n    { type: PlotlyService },\n    { type: IterableDiffers },\n    { type: KeyValueDiffers }\n];\nPlotlyComponent.propDecorators = {\n    plotEl: [{ type: ViewChild, args: ['plot', { static: true },] }],\n    data: [{ type: Input }],\n    layout: [{ type: Input }],\n    config: [{ type: Input }],\n    frames: [{ type: Input }],\n    style: [{ type: Input }],\n    divId: [{ type: Input }],\n    revision: [{ type: Input }],\n    className: [{ type: Input }],\n    debug: [{ type: Input }],\n    useResizeHandler: [{ type: Input }],\n    updateOnLayoutChange: [{ type: Input }],\n    updateOnDataChange: [{ type: Input }],\n    updateOnlyWithRevision: [{ type: Input }],\n    initialized: [{ type: Output }],\n    update: [{ type: Output }],\n    purge: [{ type: Output }],\n    error: [{ type: Output }],\n    afterExport: [{ type: Output }],\n    afterPlot: [{ type: Output }],\n    animated: [{ type: Output }],\n    animatingFrame: [{ type: Output }],\n    animationInterrupted: [{ type: Output }],\n    autoSize: [{ type: Output }],\n    beforeExport: [{ type: Output }],\n    buttonClicked: [{ type: Output }],\n    click: [{ type: Output }],\n    plotlyClick: [{ type: Output }],\n    clickAnnotation: [{ type: Output }],\n    deselect: [{ type: Output }],\n    doubleClick: [{ type: Output }],\n    framework: [{ type: Output }],\n    hover: [{ type: Output }],\n    legendClick: [{ type: Output }],\n    legendDoubleClick: [{ type: Output }],\n    react: [{ type: Output }],\n    relayout: [{ type: Output }],\n    restyle: [{ type: Output }],\n    redraw: [{ type: Output }],\n    selected: [{ type: Output }],\n    selecting: [{ type: Output }],\n    sliderChange: [{ type: Output }],\n    sliderEnd: [{ type: Output }],\n    sliderStart: [{ type: Output }],\n    transitioning: [{ type: Output }],\n    transitionInterrupted: [{ type: Output }],\n    unhover: [{ type: Output }],\n    relayouting: [{ type: Output }],\n    treemapclick: [{ type: Output }],\n    sunburstclick: [{ type: Output }]\n};\n\nclass PlotlySharedModule {\n    constructor() { }\n}\nPlotlySharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [PlotlyComponent],\n                imports: [CommonModule],\n                providers: [PlotlyService],\n                exports: [PlotlyComponent],\n            },] }\n];\nPlotlySharedModule.ctorParameters = () => [];\n\nclass PlotlyModule {\n    constructor() {\n        if (!this.isValid()) {\n            const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start'\n                + ' to see how to add PlotlyJS to your project.';\n            throw new Error(msg);\n        }\n        PlotlyService.setPlotly(PlotlyModule.plotlyjs);\n    }\n    isValid() {\n        return PlotlyModule.plotlyjs !== undefined\n            && (typeof PlotlyModule.plotlyjs.plot === 'function'\n                || typeof PlotlyModule.plotlyjs.newPlot === 'function');\n    }\n}\nPlotlyModule.plotlyjs = {};\nPlotlyModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [],\n                imports: [CommonModule, PlotlySharedModule],\n                providers: [PlotlyService],\n                exports: [PlotlySharedModule],\n            },] }\n];\nPlotlyModule.ctorParameters = () => [];\n\nclass PlotlyViaCDNModule {\n    constructor(plotlyService) {\n        this.plotlyService = plotlyService;\n        PlotlyService.setModuleName('ViaCDN');\n    }\n    static setPlotlyVersion(version) {\n        const isOk = version === 'latest' || /^\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\n        if (!isOk) {\n            throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3)`);\n        }\n        PlotlyViaCDNModule.loadViaCDN();\n        PlotlyViaCDNModule.plotlyVersion = version;\n    }\n    static setPlotlyBundle(bundle) {\n        const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\n        if (!isOk) {\n            const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\n            throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\n        }\n        PlotlyViaCDNModule.plotlyBundle = bundle;\n    }\n    static loadViaCDN() {\n        PlotlyService.setPlotly('waiting');\n        const init = () => {\n            const src = PlotlyViaCDNModule.plotlyBundle == null\n                ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js`\n                : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\n            const script = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = src;\n            script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\n            const head = document.getElementsByTagName('head')[0];\n            head.appendChild(script);\n            let counter = 200; // equivalent of 10 seconds...\n            const fn = () => {\n                const plotly = window.Plotly;\n                if (plotly) {\n                    PlotlyService.setPlotly(plotly);\n                }\n                else if (counter > 0) {\n                    counter--;\n                    setTimeout(fn, 50);\n                }\n                else {\n                    throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\n                }\n            };\n            fn();\n        };\n        setTimeout(init);\n    }\n}\nPlotlyViaCDNModule.plotlyBundle = null;\nPlotlyViaCDNModule.plotlyVersion = 'latest';\nPlotlyViaCDNModule.plotlyBundleNames = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\nPlotlyViaCDNModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [],\n                imports: [CommonModule, PlotlySharedModule],\n                providers: [PlotlyService],\n                exports: [PlotlySharedModule],\n            },] }\n];\nPlotlyViaCDNModule.ctorParameters = () => [\n    { type: PlotlyService }\n];\n\nclass PlotlyViaWindowModule {\n    constructor() {\n        const plotly = window.Plotly;\n        if (typeof plotly === 'undefined') {\n            throw new Error(`Plotly object not found on window.`);\n        }\n        PlotlyService.setPlotly(plotly);\n    }\n}\nPlotlyViaWindowModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [],\n                imports: [CommonModule, PlotlySharedModule],\n                providers: [PlotlyService],\n                exports: [PlotlySharedModule],\n            },] }\n];\nPlotlyViaWindowModule.ctorParameters = () => [];\n\n/*\n * Public API Surface of plotly\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PlotlyComponent, PlotlyModule, PlotlyService, PlotlyViaCDNModule, PlotlyViaWindowModule, PlotlySharedModule as ɵa };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}