{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nexport class DopplerRangeComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.dopplerData = null;\n    this.chartPoints = '';\n    this.chartWidth = 300;\n    this.chartHeight = 200;\n  }\n  ngOnInit() {\n    this.fetchDopplerData();\n  }\n  fetchDopplerData() {\n    console.log('Fetching Doppler data...');\n    this.dataService.getDoppler().subscribe({\n      next: data => {\n        console.log('Doppler data received:', data);\n        this.dopplerData = data;\n        this.generateChartPoints();\n      },\n      error: error => {\n        console.error('Error fetching Doppler data:', error);\n      }\n    });\n  }\n  generateChartPoints() {\n    if (!this.dopplerData || !this.dopplerData.frequencies || !this.dopplerData.amplitudes) {\n      console.error('Invalid doppler data for chart generation');\n      return;\n    }\n    const points = [];\n    const maxAmplitude = this.dopplerData.max_amplitude;\n    this.dopplerData.frequencies.forEach((freq, index) => {\n      const amplitude = this.dopplerData.amplitudes[index];\n      // Convert frequency to x position (0 to chartWidth)\n      const x = (freq + 25) / 50 * this.chartWidth; // freq range: -25 to +25\n      // Convert amplitude to y position (inverted, 0 at top)\n      const y = this.chartHeight - amplitude / maxAmplitude * this.chartHeight;\n      points.push(`${x.toFixed(1)},${y.toFixed(1)}`);\n    });\n    this.chartPoints = points.join(' ');\n    console.log('Chart points generated:', this.chartPoints.substring(0, 100) + '...');\n  }\n  static {\n    this.ɵfac = function DopplerRangeComponent_Factory(t) {\n      return new (t || DopplerRangeComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DopplerRangeComponent,\n      selectors: [[\"app-doppler-range\"]],\n      decls: 3,\n      vars: 0,\n      consts: [[1, \"doppler-range-container\"], [1, \"doppler-visualization\"], [1, \"doppler-bar-container\"]],\n      template: function DopplerRangeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"div\", 2);\n          i0.ɵɵelementEnd()();\n        }\n      },\n      styles: [\".doppler-range-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 250px;\\n}\\n\\n.doppler-visualization[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background-color: rgba(10, 37, 64, 0.05);\\n  border-radius: var(--border-radius-sm);\\n  padding: var(--spacing-md);\\n  display: flex;\\n  align-items: flex-end;\\n  justify-content: space-around;\\n}\\n\\n.doppler-bar-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-end;\\n  justify-content: space-around;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.doppler-bar[_ngcontent-%COMP%] {\\n  width: 15%;\\n  background: linear-gradient(to top, var(--primary-color), var(--accent-color));\\n  border-radius: var(--border-radius-sm);\\n  animation: _ngcontent-%COMP%_rise 0.5s ease-out forwards;\\n  transform: scaleY(0);\\n  transform-origin: bottom;\\n}\\n\\n@keyframes _ngcontent-%COMP%_rise {\\n  from {\\n    transform: scaleY(0);\\n  }\\n  to {\\n    transform: scaleY(1);\\n  }\\n}\\n\\n.doppler-info[_ngcontent-%COMP%] {\\n  margin-top: var(--spacing-md);\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.range-info[_ngcontent-%COMP%] {\\n  font-size: 0.9rem;\\n  color: var(--dark-gray);\\n}\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kb3BwbGVyLXJhbmdlL2RvcHBsZXItcmFuZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsT0FBTztFQUNQLHdDQUF3QztFQUN4QyxzQ0FBc0M7RUFDdEMsMEJBQTBCO0VBQzFCLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFCQUFxQjtFQUNyQiw2QkFBNkI7RUFDN0IsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFVBQVU7RUFDViw4RUFBOEU7RUFDOUUsc0NBQXNDO0VBQ3RDLHNDQUFzQztFQUN0QyxvQkFBb0I7RUFDcEIsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0U7SUFDRSxvQkFBb0I7RUFDdEI7RUFDQTtJQUNFLG9CQUFvQjtFQUN0QjtBQUNGOztBQUVBO0VBQ0UsNkJBQTZCO0VBQzdCLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsdUJBQXVCO0FBQ3pCOztBQUVBLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbIi5kb3BwbGVyLXJhbmdlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGhlaWdodDogMjUwcHg7XHJcbn1cclxuXHJcbi5kb3BwbGVyLXZpc3VhbGl6YXRpb24ge1xyXG4gIGZsZXg6IDE7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMCwgMzcsIDY0LCAwLjA1KTtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzLXNtKTtcclxuICBwYWRkaW5nOiB2YXIoLS1zcGFjaW5nLW1kKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxufVxyXG5cclxuLmRvcHBsZXItYmFyLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uZG9wcGxlci1iYXIge1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgdmFyKC0tcHJpbWFyeS1jb2xvciksIHZhcigtLWFjY2VudC1jb2xvcikpO1xyXG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMtc20pO1xyXG4gIGFuaW1hdGlvbjogcmlzZSAwLjVzIGVhc2Utb3V0IGZvcndhcmRzO1xyXG4gIHRyYW5zZm9ybTogc2NhbGVZKDApO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbTtcclxufVxyXG5cclxuQGtleWZyYW1lcyByaXNlIHtcclxuICBmcm9tIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVZKDApO1xyXG4gIH1cclxuICB0byB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWSgxKTtcclxuICB9XHJcbn1cclxuXHJcbi5kb3BwbGVyLWluZm8ge1xyXG4gIG1hcmdpbi10b3A6IHZhcigtLXNwYWNpbmctbWQpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4ucmFuZ2UtaW5mbyB7XHJcbiAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgY29sb3I6IHZhcigtLWRhcmstZ3JheSk7XHJcbn1cclxuXHJcbi8qIFRPRE86IGltcGxlbWVudCBhbmltYXRpb24gKi9cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["DopplerRangeComponent","constructor","dataService","dopplerData","chartPoints","chartWidth","chartHeight","ngOnInit","fetchDopplerData","console","log","getDoppler","subscribe","next","data","generateChartPoints","error","frequencies","amplitudes","points","maxAmplitude","max_amplitude","forEach","freq","index","amplitude","x","y","push","toFixed","join","substring","i0","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DopplerRangeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.ts","C:\\Users\\hibab\\Desktop\\WLCN\\frontend\\src\\app\\components\\doppler-range\\doppler-range.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\n\r\ninterface DopplerData {\r\n  frequencies: number[];\r\n  amplitudes: number[];\r\n  max_amplitude: number;\r\n  peak_frequency: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-doppler-range',\r\n  templateUrl: './doppler-range.component.html',\r\n  styleUrls: ['./doppler-range.component.css']\r\n})\r\nexport class DopplerRangeComponent implements OnInit {\r\n  dopplerData: DopplerData | null = null;\r\n  chartPoints: string = '';\r\n  chartWidth = 300;\r\n  chartHeight = 200;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchDopplerData();\r\n  }\r\n\r\n  fetchDopplerData(): void {\r\n    console.log('Fetching Doppler data...');\r\n    this.dataService.getDoppler().subscribe({\r\n      next: (data: DopplerData) => {\r\n        console.log('Doppler data received:', data);\r\n        this.dopplerData = data;\r\n        this.generateChartPoints();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching Doppler data:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private generateChartPoints(): void {\r\n    if (!this.dopplerData || !this.dopplerData.frequencies || !this.dopplerData.amplitudes) {\r\n      console.error('Invalid doppler data for chart generation');\r\n      return;\r\n    }\r\n\r\n    const points: string[] = [];\r\n    const maxAmplitude = this.dopplerData.max_amplitude;\r\n    \r\n    this.dopplerData.frequencies.forEach((freq, index) => {\r\n      const amplitude = this.dopplerData!.amplitudes[index];\r\n      \r\n      // Convert frequency to x position (0 to chartWidth)\r\n      const x = ((freq + 25) / 50) * this.chartWidth; // freq range: -25 to +25\r\n      \r\n      // Convert amplitude to y position (inverted, 0 at top)\r\n      const y = this.chartHeight - (amplitude / maxAmplitude) * this.chartHeight;\r\n      \r\n      points.push(`${x.toFixed(1)},${y.toFixed(1)}`);\r\n    });\r\n    \r\n    this.chartPoints = points.join(' ');\r\n    console.log('Chart points generated:', this.chartPoints.substring(0, 100) + '...');\r\n  }\r\n}\r\n\r\n","<div class=\"doppler-range-container\">\r\n  <div class=\"doppler-visualization\">\r\n    <!-- Placeholder for Doppler visualization -->\r\n    <div class=\"doppler-bar-container\">\r\n      \r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":";;AAeA,OAAM,MAAOA,qBAAqB;EAMhCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,WAAW,GAAuB,IAAI;IACtC,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,UAAU,GAAG,GAAG;IAChB,KAAAC,WAAW,GAAG,GAAG;EAE+B;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgBA,CAAA;IACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,IAAI,CAACR,WAAW,CAACS,UAAU,EAAE,CAACC,SAAS,CAAC;MACtCC,IAAI,EAAGC,IAAiB,IAAI;QAC1BL,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEI,IAAI,CAAC;QAC3C,IAAI,CAACX,WAAW,GAAGW,IAAI;QACvB,IAAI,CAACC,mBAAmB,EAAE;MAC5B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfP,OAAO,CAACO,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACD,CAAC;EACJ;EAEQD,mBAAmBA,CAAA;IACzB,IAAI,CAAC,IAAI,CAACZ,WAAW,IAAI,CAAC,IAAI,CAACA,WAAW,CAACc,WAAW,IAAI,CAAC,IAAI,CAACd,WAAW,CAACe,UAAU,EAAE;MACtFT,OAAO,CAACO,KAAK,CAAC,2CAA2C,CAAC;MAC1D;;IAGF,MAAMG,MAAM,GAAa,EAAE;IAC3B,MAAMC,YAAY,GAAG,IAAI,CAACjB,WAAW,CAACkB,aAAa;IAEnD,IAAI,CAAClB,WAAW,CAACc,WAAW,CAACK,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;MACnD,MAAMC,SAAS,GAAG,IAAI,CAACtB,WAAY,CAACe,UAAU,CAACM,KAAK,CAAC;MAErD;MACA,MAAME,CAAC,GAAI,CAACH,IAAI,GAAG,EAAE,IAAI,EAAE,GAAI,IAAI,CAAClB,UAAU,CAAC,CAAC;MAEhD;MACA,MAAMsB,CAAC,GAAG,IAAI,CAACrB,WAAW,GAAImB,SAAS,GAAGL,YAAY,GAAI,IAAI,CAACd,WAAW;MAE1Ea,MAAM,CAACS,IAAI,CAAC,GAAGF,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,IAAIF,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IAChD,CAAC,CAAC;IAEF,IAAI,CAACzB,WAAW,GAAGe,MAAM,CAACW,IAAI,CAAC,GAAG,CAAC;IACnCrB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAACN,WAAW,CAAC2B,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;EACpF;;;uBAjDW/B,qBAAqB,EAAAgC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAArBnC,qBAAqB;MAAAoC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCflCV,EAAA,CAAAY,cAAA,aAAqC;UAGjCZ,EAAA,CAAAa,SAAA,aAEM;UACRb,EAAA,CAAAc,YAAA,EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}