{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nconst _c0 = [\"canvas\"];\nexport class DopplerMapComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.currentFrame = 0;\n    this.totalFrames = 0;\n    this.isPlaying = true;\n  }\n  ngOnInit() {\n    this.initCanvas();\n    this.startStreaming();\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n  }\n  initCanvas() {\n    const canvas = this.canvasRef.nativeElement;\n    this.ctx = canvas.getContext('2d');\n    canvas.width = 500;\n    canvas.height = 500;\n  }\n  startStreaming() {\n    // Poll for new frame data every 100ms\n    this.subscription = interval(100).subscribe(() => {\n      if (this.isPlaying) {\n        this.fetchFrameData();\n      }\n    });\n  }\n  fetchFrameData() {\n    this.dataService.getDopplerStream().subscribe({\n      next: data => {\n        if (data.data) {\n          this.currentFrame = data.frame_number;\n          this.totalFrames = data.total_frames;\n          this.drawFrame(data.data);\n        }\n      },\n      error: error => {\n        console.error('Error fetching Doppler data:', error);\n      }\n    });\n  }\n  drawFrame(frameData) {\n    const canvas = this.canvasRef.nativeElement;\n    const {\n      width,\n      height\n    } = canvas;\n    // Clear canvas\n    this.ctx.clearRect(0, 0, width, height);\n    if (!frameData || frameData.length === 0) return;\n    const rows = frameData.length;\n    const cols = frameData[0].length;\n    const cellWidth = width / cols;\n    const cellHeight = height / rows;\n    // Find min and max values for normalization\n    let minVal = Infinity;\n    let maxVal = -Infinity;\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const val = frameData[i][j];\n        minVal = Math.min(minVal, val);\n        maxVal = Math.max(maxVal, val);\n      }\n    }\n    // Draw the heatmap\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const val = frameData[i][j];\n        const normalizedVal = (val - minVal) / (maxVal - minVal);\n        // Create color based on value (purple to yellow colormap)\n        const color = this.getColorFromValue(normalizedVal);\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(j * cellWidth, i * cellHeight, cellWidth, cellHeight);\n      }\n    }\n  }\n  getColorFromValue(value) {\n    // Purple to yellow colormap similar to the Python visualization\n    const r = Math.round(value * 255);\n    const g = Math.round(value * 255);\n    const b = Math.round(255 - value * 255);\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n  togglePlayPause() {\n    this.isPlaying = !this.isPlaying;\n  }\n  restart() {\n    this.currentFrame = 0;\n    this.isPlaying = true;\n  }\n  static {\n    this.ɵfac = function DopplerMapComponent_Factory(t) {\n      return new (t || DopplerMapComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DopplerMapComponent,\n      selectors: [[\"app-doppler-map\"]],\n      viewQuery: function DopplerMapComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasRef = _t.first);\n        }\n      },\n      decls: 27,\n      vars: 3,\n      consts: [[1, \"doppler-map-container\"], [1, \"doppler-header\"], [1, \"controls\"], [1, \"control-btn\", 3, \"click\"], [1, \"frame-info\"], [1, \"canvas-container\"], [1, \"doppler-canvas\"], [\"canvas\", \"\"], [1, \"colorbar\"], [1, \"colorbar-gradient\"], [1, \"colorbar-labels\"], [1, \"axes-labels\"], [1, \"x-axis-label\"], [1, \"y-axis-label\"]],\n      template: function DopplerMapComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n          i0.ɵɵtext(3, \"Range-Doppler Map - Live Stream\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DopplerMapComponent_Template_button_click_5_listener() {\n            return ctx.togglePlayPause();\n          });\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DopplerMapComponent_Template_button_click_7_listener() {\n            return ctx.restart();\n          });\n          i0.ɵɵtext(8, \"Restart\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 4)(10, \"span\");\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 5);\n          i0.ɵɵelement(13, \"canvas\", 6, 7);\n          i0.ɵɵelementStart(15, \"div\", 8);\n          i0.ɵɵelement(16, \"div\", 9);\n          i0.ɵɵelementStart(17, \"div\", 10)(18, \"span\");\n          i0.ɵɵtext(19, \"Low\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"span\");\n          i0.ɵɵtext(21, \"High\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(22, \"div\", 11)(23, \"div\", 12);\n          i0.ɵɵtext(24, \"Range\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 13);\n          i0.ɵɵtext(26, \"Doppler\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isPlaying ? \"Pause\" : \"Play\", \" \");\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate2(\"Frame: \", ctx.currentFrame + 1, \" / \", ctx.totalFrames, \"\");\n        }\n      },\n      styles: [\".doppler-map-container[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border-radius: var(--border-radius-md);\\n  padding: var(--spacing-lg);\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n  margin-bottom: var(--spacing-lg);\\n}\\n\\n.doppler-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: var(--spacing-md);\\n}\\n\\n.doppler-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: var(--primary-color);\\n  font-size: 1.2rem;\\n}\\n\\n.controls[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: var(--spacing-sm);\\n}\\n\\n.control-btn[_ngcontent-%COMP%] {\\n  padding: var(--spacing-sm) var(--spacing-md);\\n  background-color: var(--accent-color);\\n  color: var(--primary-color);\\n  border: none;\\n  border-radius: var(--border-radius-sm);\\n  cursor: pointer;\\n  font-weight: 500;\\n  transition: all 0.3s ease;\\n}\\n\\n.control-btn[_ngcontent-%COMP%]:hover {\\n  background-color: var(--primary-color);\\n  color: white;\\n  transform: translateY(-2px);\\n}\\n\\n.frame-info[_ngcontent-%COMP%] {\\n  margin-bottom: var(--spacing-md);\\n  font-size: 0.9rem;\\n  color: var(--dark-gray);\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: var(--spacing-md);\\n}\\n\\n.doppler-canvas[_ngcontent-%COMP%] {\\n  border: 2px solid var(--light-gray);\\n  border-radius: var(--border-radius-sm);\\n  background-color: #000;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\n.colorbar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  height: 500px;\\n}\\n\\n.colorbar-gradient[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 400px;\\n  background: linear-gradient(\\n    to top,\\n    #4a0080,\\n    #6a1b9a,\\n    #8e24aa,\\n    #ab47bc,\\n    #ba68c8,\\n    #ce93d8,\\n    #e1bee7,\\n    #f3e5f5,\\n    #fff9c4,\\n    #fff59d,\\n    #fff176,\\n    #ffee58,\\n    #ffeb3b,\\n    #fdd835,\\n    #fbc02d\\n  );\\n  border-radius: var(--border-radius-sm);\\n  border: 1px solid var(--light-gray);\\n  margin-bottom: var(--spacing-sm);\\n}\\n\\n.colorbar-labels[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  height: 40px;\\n  font-size: 0.8rem;\\n  color: var(--dark-gray);\\n}\\n\\n.axes-labels[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: var(--spacing-md);\\n  font-size: 0.9rem;\\n  color: var(--dark-gray);\\n}\\n\\n.x-axis-label[_ngcontent-%COMP%] {\\n  text-align: center;\\n  flex: 1;\\n}\\n\\n.y-axis-label[_ngcontent-%COMP%] {\\n  writing-mode: vertical-lr;\\n  text-orientation: mixed;\\n  position: absolute;\\n  left: 10px;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .doppler-header[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: var(--spacing-sm);\\n  }\\n  \\n  .doppler-canvas[_ngcontent-%COMP%] {\\n    max-width: 100%;\\n    height: auto;\\n  }\\n  \\n  .canvas-container[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  \\n  .colorbar[_ngcontent-%COMP%] {\\n    flex-direction: row;\\n    height: auto;\\n    width: 100%;\\n  }\\n  \\n  .colorbar-gradient[_ngcontent-%COMP%] {\\n    width: 200px;\\n    height: 20px;\\n    background: linear-gradient(\\n      to right,\\n      #4a0080,\\n      #6a1b9a,\\n      #8e24aa,\\n      #ab47bc,\\n      #ba68c8,\\n      #ce93d8,\\n      #e1bee7,\\n      #f3e5f5,\\n      #fff9c4,\\n      #fff59d,\\n      #fff176,\\n      #ffee58,\\n      #ffeb3b,\\n      #fdd835,\\n      #fbc02d\\n    );\\n  }\\n  \\n  .colorbar-labels[_ngcontent-%COMP%] {\\n    flex-direction: row;\\n    width: 200px;\\n    height: auto;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kb3BwbGVyLW1hcC9kb3BwbGVyLW1hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHNDQUFzQztFQUN0QywwQkFBMEI7RUFDMUIseUNBQXlDO0VBQ3pDLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLFNBQVM7RUFDVCwyQkFBMkI7RUFDM0IsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLDRDQUE0QztFQUM1QyxxQ0FBcUM7RUFDckMsMkJBQTJCO0VBQzNCLFlBQVk7RUFDWixzQ0FBc0M7RUFDdEMsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxzQ0FBc0M7RUFDdEMsWUFBWTtFQUNaLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGdDQUFnQztFQUNoQyxpQkFBaUI7RUFDakIsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLG1DQUFtQztFQUNuQyxzQ0FBc0M7RUFDdEMsc0JBQXNCO0VBQ3RCLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2I7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJDO0VBQ0Qsc0NBQXNDO0VBQ3RDLG1DQUFtQztFQUNuQyxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsNkJBQTZCO0VBQzdCLGlCQUFpQjtFQUNqQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsT0FBTztBQUNUOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFFBQVE7RUFDUiwyQkFBMkI7QUFDN0I7O0FBRUEsc0JBQXNCO0FBQ3RCO0VBQ0U7SUFDRSxzQkFBc0I7SUFDdEIsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osV0FBVztFQUNiOztFQUVBO0lBQ0UsWUFBWTtJQUNaLFlBQVk7SUFDWjs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FpQkM7RUFDSDs7RUFFQTtJQUNFLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osWUFBWTtFQUNkO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZG9wcGxlci1tYXAtY29udGFpbmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzLW1kKTtcclxuICBwYWRkaW5nOiB2YXIoLS1zcGFjaW5nLWxnKTtcclxuICBib3gtc2hhZG93OiAwIDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1zcGFjaW5nLWxnKTtcclxufVxyXG5cclxuLmRvcHBsZXItaGVhZGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IHZhcigtLXNwYWNpbmctbWQpO1xyXG59XHJcblxyXG4uZG9wcGxlci1oZWFkZXIgaDMge1xyXG4gIG1hcmdpbjogMDtcclxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XHJcbiAgZm9udC1zaXplOiAxLjJyZW07XHJcbn1cclxuXHJcbi5jb250cm9scyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6IHZhcigtLXNwYWNpbmctc20pO1xyXG59XHJcblxyXG4uY29udHJvbC1idG4ge1xyXG4gIHBhZGRpbmc6IHZhcigtLXNwYWNpbmctc20pIHZhcigtLXNwYWNpbmctbWQpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC1jb2xvcik7XHJcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzLXNtKTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xyXG59XHJcblxyXG4uY29udHJvbC1idG46aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XHJcbn1cclxuXHJcbi5mcmFtZS1pbmZvIHtcclxuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1zcGFjaW5nLW1kKTtcclxuICBmb250LXNpemU6IDAuOXJlbTtcclxuICBjb2xvcjogdmFyKC0tZGFyay1ncmF5KTtcclxufVxyXG5cclxuLmNhbnZhcy1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiB2YXIoLS1zcGFjaW5nLW1kKTtcclxufVxyXG5cclxuLmRvcHBsZXItY2FudmFzIHtcclxuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1saWdodC1ncmF5KTtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzLXNtKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbn1cclxuXHJcbi5jb2xvcmJhciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiA1MDBweDtcclxufVxyXG5cclxuLmNvbG9yYmFyLWdyYWRpZW50IHtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDQwMHB4O1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuICAgIHRvIHRvcCxcclxuICAgICM0YTAwODAsXHJcbiAgICAjNmExYjlhLFxyXG4gICAgIzhlMjRhYSxcclxuICAgICNhYjQ3YmMsXHJcbiAgICAjYmE2OGM4LFxyXG4gICAgI2NlOTNkOCxcclxuICAgICNlMWJlZTcsXHJcbiAgICAjZjNlNWY1LFxyXG4gICAgI2ZmZjljNCxcclxuICAgICNmZmY1OWQsXHJcbiAgICAjZmZmMTc2LFxyXG4gICAgI2ZmZWU1OCxcclxuICAgICNmZmViM2IsXHJcbiAgICAjZmRkODM1LFxyXG4gICAgI2ZiYzAyZFxyXG4gICk7XHJcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cy1zbSk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tbGlnaHQtZ3JheSk7XHJcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tc3BhY2luZy1zbSk7XHJcbn1cclxuXHJcbi5jb2xvcmJhci1sYWJlbHMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGZvbnQtc2l6ZTogMC44cmVtO1xyXG4gIGNvbG9yOiB2YXIoLS1kYXJrLWdyYXkpO1xyXG59XHJcblxyXG4uYXhlcy1sYWJlbHMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIG1hcmdpbi10b3A6IHZhcigtLXNwYWNpbmctbWQpO1xyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIGNvbG9yOiB2YXIoLS1kYXJrLWdyYXkpO1xyXG59XHJcblxyXG4ueC1heGlzLWxhYmVsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZmxleDogMTtcclxufVxyXG5cclxuLnktYXhpcy1sYWJlbCB7XHJcbiAgd3JpdGluZy1tb2RlOiB2ZXJ0aWNhbC1scjtcclxuICB0ZXh0LW9yaWVudGF0aW9uOiBtaXhlZDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMTBweDtcclxuICB0b3A6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbn1cclxuXHJcbi8qIFJlc3BvbnNpdmUgZGVzaWduICovXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gIC5kb3BwbGVyLWhlYWRlciB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZ2FwOiB2YXIoLS1zcGFjaW5nLXNtKTtcclxuICB9XHJcbiAgXHJcbiAgLmRvcHBsZXItY2FudmFzIHtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICB9XHJcbiAgXHJcbiAgLmNhbnZhcy1jb250YWluZXIge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgXHJcbiAgLmNvbG9yYmFyIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmNvbG9yYmFyLWdyYWRpZW50IHtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgdG8gcmlnaHQsXHJcbiAgICAgICM0YTAwODAsXHJcbiAgICAgICM2YTFiOWEsXHJcbiAgICAgICM4ZTI0YWEsXHJcbiAgICAgICNhYjQ3YmMsXHJcbiAgICAgICNiYTY4YzgsXHJcbiAgICAgICNjZTkzZDgsXHJcbiAgICAgICNlMWJlZTcsXHJcbiAgICAgICNmM2U1ZjUsXHJcbiAgICAgICNmZmY5YzQsXHJcbiAgICAgICNmZmY1OWQsXHJcbiAgICAgICNmZmYxNzYsXHJcbiAgICAgICNmZmVlNTgsXHJcbiAgICAgICNmZmViM2IsXHJcbiAgICAgICNmZGQ4MzUsXHJcbiAgICAgICNmYmMwMmRcclxuICAgICk7XHJcbiAgfVxyXG4gIFxyXG4gIC5jb2xvcmJhci1sYWJlbHMge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["interval","DopplerMapComponent","constructor","dataService","currentFrame","totalFrames","isPlaying","ngOnInit","initCanvas","startStreaming","ngOnDestroy","subscription","unsubscribe","animationId","cancelAnimationFrame","canvas","canvasRef","nativeElement","ctx","getContext","width","height","subscribe","fetchFrameData","getDopplerStream","next","data","frame_number","total_frames","drawFrame","error","console","frameData","clearRect","length","rows","cols","cellWidth","cellHeight","minVal","Infinity","maxVal","i","j","val","Math","min","max","normalizedVal","color","getColorFromValue","fillStyle","fillRect","value","r","round","g","b","togglePlayPause","restart","i0","ɵɵdirectiveInject","i1","DataService","selectors","viewQuery","DopplerMapComponent_Query","rf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DopplerMapComponent_Template_button_click_5_listener","DopplerMapComponent_Template_button_click_7_listener","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate2"],"sources":["C:\\Users\\hibab\\Pictures\\WLCN\\frontend\\src\\app\\components\\doppler-map\\doppler-map.component.ts","C:\\Users\\hibab\\Pictures\\WLCN\\frontend\\src\\app\\components\\doppler-map\\doppler-map.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, ElementRef, ViewChild } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\nimport { interval, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-doppler-map',\r\n  templateUrl: './doppler-map.component.html',\r\n  styleUrls: ['./doppler-map.component.css']\r\n})\r\nexport class DopplerMapComponent implements OnInit, OnDestroy {\r\n  @ViewChild('canvas', { static: true }) canvasRef!: ElementRef<HTMLCanvasElement>;\r\n  \r\n  private ctx!: CanvasRenderingContext2D;\r\n  private subscription?: Subscription;\r\n  private animationId?: number;\r\n  \r\n  currentFrame = 0;\r\n  totalFrames = 0;\r\n  isPlaying = true;\r\n  \r\n  constructor(private dataService: DataService) {}\r\n  \r\n  ngOnInit() {\r\n    this.initCanvas();\r\n    this.startStreaming();\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    if (this.animationId) {\r\n      cancelAnimationFrame(this.animationId);\r\n    }\r\n  }\r\n  \r\n  private initCanvas() {\r\n    const canvas = this.canvasRef.nativeElement;\r\n    this.ctx = canvas.getContext('2d')!;\r\n    canvas.width = 500;\r\n    canvas.height = 500;\r\n  }\r\n  \r\n  private startStreaming() {\r\n    // Poll for new frame data every 100ms\r\n    this.subscription = interval(100).subscribe(() => {\r\n      if (this.isPlaying) {\r\n        this.fetchFrameData();\r\n      }\r\n    });\r\n  }\r\n  \r\n  private fetchFrameData() {\r\n    this.dataService.getDopplerStream().subscribe({\r\n      next: (data) => {\r\n        if (data.data) {\r\n          this.currentFrame = data.frame_number;\r\n          this.totalFrames = data.total_frames;\r\n          this.drawFrame(data.data);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching Doppler data:', error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  private drawFrame(frameData: number[][]) {\r\n    const canvas = this.canvasRef.nativeElement;\r\n    const { width, height } = canvas;\r\n    \r\n    // Clear canvas\r\n    this.ctx.clearRect(0, 0, width, height);\r\n    \r\n    if (!frameData || frameData.length === 0) return;\r\n    \r\n    const rows = frameData.length;\r\n    const cols = frameData[0].length;\r\n    const cellWidth = width / cols;\r\n    const cellHeight = height / rows;\r\n    \r\n    // Find min and max values for normalization\r\n    let minVal = Infinity;\r\n    let maxVal = -Infinity;\r\n    \r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        const val = frameData[i][j];\r\n        minVal = Math.min(minVal, val);\r\n        maxVal = Math.max(maxVal, val);\r\n      }\r\n    }\r\n    \r\n    // Draw the heatmap\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        const val = frameData[i][j];\r\n        const normalizedVal = (val - minVal) / (maxVal - minVal);\r\n        \r\n        // Create color based on value (purple to yellow colormap)\r\n        const color = this.getColorFromValue(normalizedVal);\r\n        \r\n        this.ctx.fillStyle = color;\r\n        this.ctx.fillRect(j * cellWidth, i * cellHeight, cellWidth, cellHeight);\r\n      }\r\n    }\r\n  }\r\n  \r\n  private getColorFromValue(value: number): string {\r\n    // Purple to yellow colormap similar to the Python visualization\r\n    const r = Math.round(value * 255);\r\n    const g = Math.round(value * 255);\r\n    const b = Math.round(255 - value * 255);\r\n    \r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  }\r\n  \r\n  togglePlayPause() {\r\n    this.isPlaying = !this.isPlaying;\r\n  }\r\n  \r\n  restart() {\r\n    this.currentFrame = 0;\r\n    this.isPlaying = true;\r\n  }\r\n}\r\n","<div class=\"doppler-map-container\">\r\n  <div class=\"doppler-header\">\r\n    <h3>Range-Doppler Map - Live Stream</h3>\r\n    <div class=\"controls\">\r\n      <button class=\"control-btn\" (click)=\"togglePlayPause()\">\r\n        {{ isPlaying ? 'Pause' : 'Play' }}\r\n      </button>\r\n      <button class=\"control-btn\" (click)=\"restart()\">Restart</button>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"frame-info\">\r\n    <span>Frame: {{ currentFrame + 1 }} / {{ totalFrames }}</span>\r\n  </div>\r\n  \r\n  <div class=\"canvas-container\">\r\n    <canvas #canvas class=\"doppler-canvas\"></canvas>\r\n    \r\n    <!-- Colorbar -->\r\n    <div class=\"colorbar\">\r\n      <div class=\"colorbar-gradient\"></div>\r\n      <div class=\"colorbar-labels\">\r\n        <span>Low</span>\r\n        <span>High</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"axes-labels\">\r\n    <div class=\"x-axis-label\">Range</div>\r\n    <div class=\"y-axis-label\">Doppler</div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}