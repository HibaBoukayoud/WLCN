{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let StatisticsComponent = class StatisticsComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.chartData = null;\n    this.chartPoints = '';\n  }\n  ngOnInit() {\n    this.loadChartData();\n  }\n  loadChartData() {\n    this.dataService.getChartData().subscribe({\n      next: data => {\n        console.log('Chart data:', data);\n        this.chartData = data;\n        this.generateChartPoints();\n      },\n      error: error => {\n        console.error('Error fetching chart data:', error);\n        // Fallback to default data if API fails\n        this.setDefaultData();\n      }\n    });\n  }\n  generateChartPoints() {\n    if (!this.chartData) return;\n    const points = [];\n    const maxTargets = 8;\n    const chartWidth = 240;\n    const chartHeight = 100;\n    this.chartData.targets.forEach((targets, index) => {\n      const x = index / (this.chartData.targets.length - 1) * chartWidth;\n      const y = chartHeight - targets / maxTargets * chartHeight;\n      points.push(`${x},${y}`);\n    });\n    this.chartPoints = points.join(' ');\n  }\n  setDefaultData() {\n    this.chartData = {\n      hours: ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],\n      targets: [1, 1, 2, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 1],\n      total_detections: 89,\n      peak_hour: 8,\n      avg_per_hour: 3.7\n    };\n    this.generateChartPoints();\n  }\n};\nStatisticsComponent = __decorate([Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})], StatisticsComponent);","map":{"version":3,"names":["Component","StatisticsComponent","constructor","dataService","chartData","chartPoints","ngOnInit","loadChartData","getChartData","subscribe","next","data","console","log","generateChartPoints","error","setDefaultData","points","maxTargets","chartWidth","chartHeight","targets","forEach","index","x","length","y","push","join","hours","total_detections","peak_hour","avg_per_hour","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\hibab\\Pictures\\WLCN\\frontend\\src\\app\\pages\\statistics\\statistics.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../../services/data.service';\r\n\r\ninterface ChartData {\r\n  hours: string[];\r\n  targets: number[];\r\n  total_detections: number;\r\n  peak_hour: number;\r\n  avg_per_hour: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.css']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n  chartData: ChartData | null = null;\r\n  chartPoints: string = '';\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadChartData();\r\n  }\r\n\r\n  private loadChartData(): void {\r\n    this.dataService.getChartData().subscribe({\r\n      next: (data: ChartData) => {\r\n        console.log('Chart data:', data);\r\n        this.chartData = data;\r\n        this.generateChartPoints();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching chart data:', error);\r\n        // Fallback to default data if API fails\r\n        this.setDefaultData();\r\n      }\r\n    });\r\n  }\r\n\r\n  private generateChartPoints(): void {\r\n    if (!this.chartData) return;\r\n    \r\n    const points: string[] = [];\r\n    const maxTargets = 8;\r\n    const chartWidth = 240;\r\n    const chartHeight = 100;\r\n    \r\n    this.chartData.targets.forEach((targets, index) => {\r\n      const x = (index / (this.chartData!.targets.length - 1)) * chartWidth;\r\n      const y = chartHeight - (targets / maxTargets) * chartHeight;\r\n      points.push(`${x},${y}`);\r\n    });\r\n    \r\n    this.chartPoints = points.join(' ');\r\n  }\r\n\r\n  private setDefaultData(): void {\r\n    this.chartData = {\r\n      hours: ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],\r\n      targets: [1, 1, 2, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 1],\r\n      total_detections: 89,\r\n      peak_hour: 8,\r\n      avg_per_hour: 3.7\r\n    };\r\n    this.generateChartPoints();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAgB1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,SAAS,GAAqB,IAAI;IAClC,KAAAC,WAAW,GAAW,EAAE;EAEwB;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEQA,aAAaA,CAAA;IACnB,IAAI,CAACJ,WAAW,CAACK,YAAY,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,IAAe,IAAI;QACxBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,IAAI,CAAC;QAChC,IAAI,CAACP,SAAS,GAAGO,IAAI;QACrB,IAAI,CAACG,mBAAmB,EAAE;MAC5B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;QACA,IAAI,CAACC,cAAc,EAAE;MACvB;KACD,CAAC;EACJ;EAEQF,mBAAmBA,CAAA;IACzB,IAAI,CAAC,IAAI,CAACV,SAAS,EAAE;IAErB,MAAMa,MAAM,GAAa,EAAE;IAC3B,MAAMC,UAAU,GAAG,CAAC;IACpB,MAAMC,UAAU,GAAG,GAAG;IACtB,MAAMC,WAAW,GAAG,GAAG;IAEvB,IAAI,CAAChB,SAAS,CAACiB,OAAO,CAACC,OAAO,CAAC,CAACD,OAAO,EAAEE,KAAK,KAAI;MAChD,MAAMC,CAAC,GAAID,KAAK,IAAI,IAAI,CAACnB,SAAU,CAACiB,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC,GAAIN,UAAU;MACrE,MAAMO,CAAC,GAAGN,WAAW,GAAIC,OAAO,GAAGH,UAAU,GAAIE,WAAW;MAC5DH,MAAM,CAACU,IAAI,CAAC,GAAGH,CAAC,IAAIE,CAAC,EAAE,CAAC;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACrB,WAAW,GAAGY,MAAM,CAACW,IAAI,CAAC,GAAG,CAAC;EACrC;EAEQZ,cAAcA,CAAA;IACpB,IAAI,CAACZ,SAAS,GAAG;MACfyB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MACvJR,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACjFS,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE,CAAC;MACZC,YAAY,EAAE;KACf;IACD,IAAI,CAAClB,mBAAmB,EAAE;EAC5B;CACD;AApDYb,mBAAmB,GAAAgC,UAAA,EAL/BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWnC,mBAAmB,CAoD/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}